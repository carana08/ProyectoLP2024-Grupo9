
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightNOTleftANDleftORnonassocLESSGREATERLESS_EQUALGREATER_EQUALEQUALSDIFFERENTleftPLUSMINUSleftMULTIPLYDIVIDEMODULEAND APPEND ASSIGN BEGIN CHOMP CLASS CLASS_VAR COMMA CONSTANT DEF DIFFERENT DIVIDE DOT ELSE ELSIF END EQUALS FLOAT GETS GLOBAL_VAR GREATER GREATER_EQUAL HASHARROW IF INSTANCE_VAR INTEGER LESS LESS_EQUAL LOCAL_VAR L_MAYUS_PAREN L_PAREN L_ULTRA_PAREN MINUS MODULE MULTIPLY NIL NOT OR OR_OPERATOR PLUS PRINT PUTS RETURN R_MAYUS_PAREN R_PAREN R_ULTRA_PAREN STRING THEN TWO_POINTS UNLESS UNTIL WHEN WHILEprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : print_statement\n                 | puts_statement\n                 | input_statement\n                 | assignment_statement\n                 | data_structure\n                 | control_structure\n                 | function_definition\n                 | return_statement\n                 | class_definition\n                 | method_call\n                 | array_append\n                 | indexing\n                 | array_assignament\n                 | expressionclass_definition : CLASS CONSTANT class_body ENDclass_body : statement_listclass_statement : function_definition\n                       | assignment_statementreturn_statement : RETURN expressionassignment_statement : LOCAL_VAR ASSIGN expression\n                            | GLOBAL_VAR ASSIGN expression\n                            | INSTANCE_VAR ASSIGN expression\n                            | CLASS_VAR ASSIGN expression\n                            | CONSTANT ASSIGN expressionprint_statement : PRINT L_PAREN argument_list R_PAREN\n                       | PRINT L_PAREN R_PAREN \n                       | PRINT argument_list\n                       | PRINTputs_statement : PUTS L_PAREN argument_list R_PAREN\n                      | PUTS L_PAREN R_PAREN \n                      | PUTS argument_list\n                      | PUTSargument_list : expression\n                     | argument_list COMMA expressioninput_statement : LOCAL_VAR ASSIGN GETS\n                       | LOCAL_VAR ASSIGN GETS DOT CHOMPdata_structure : array_definition\n                      | hash_definitionhash_definition : LOCAL_VAR ASSIGN L_MAYUS_PAREN hash_element_list R_MAYUS_PARENhash_element_list : hash_element\n                         | hash_element_list COMMA hash_elementhash_element : STRING HASHARROW expression\n                    | LOCAL_VAR TWO_POINTS expressionlogical_operator : AND\n                        | OR\n                        | OR_OPERATORarray_definition : LOCAL_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN\n                        | LOCAL_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN\n                        | GLOBAL_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN\n                        | GLOBAL_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN\n                        | INSTANCE_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN\n                        | INSTANCE_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN\n                        | CLASS_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN\n                        | CLASS_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PARENarray_append : LOCAL_VAR APPEND expression\n                    | GLOBAL_VAR APPEND expression\n                    | INSTANCE_VAR APPEND expression\n                    | CLASS_VAR APPEND expressionelement_list : expression\n                    | element_list COMMA expressioncontrol_structure : if_statement\n                         | until_statement\n                         | unless_statement\n                         | while_statementif_statement : IF condition statement_list END\n                    | IF condition statement_list ELSE statement_list END\n                    | IF condition statement_list ELSIF condition statement_list ELSE statement_list ENDwhile_statement : WHILE condition statement_list ENDunless_statement : UNLESS condition statement_list END\n                        | UNLESS condition statement_list ELSE statement_list ENDuntil_statement : UNTIL condition statement_list ENDcondition : expression comparison_operator expression\n                 | condition logical_operator condition\n                 | NOT condition\n                 | L_PAREN condition R_PARENfunction_definition : DEF LOCAL_VAR parameter_list statement_list END\n                           | DEF LOCAL_VAR statement_list END\n                           parameter_list : L_PAREN parameter_list_inner R_PAREN\n                      | L_PAREN R_PARENparameter_list_inner : LOCAL_VAR\n                            | parameter_list_inner COMMA LOCAL_VARexpression : expression_binop\n                  | expression_not\n                  | expression_group\n                  | expression_term\n                  | indexing\n                  | method_callexpression_binop : expression PLUS expression\n                        | expression MINUS expression\n                        | expression MULTIPLY expression\n                        | expression DIVIDE expression\n                        | expression MODULE expression\n                        | expression EQUALS expression\n                        | expression DIFFERENT expression\n                        | expression GREATER expression\n                        | expression LESS expression\n                        | expression GREATER_EQUAL expression\n                        | expression LESS_EQUAL expression\n                        | expression AND expression\n                        | expression OR expressionexpression_not : NOT expressionexpression_group : L_PAREN expression R_PARENexpression_term : INTEGER\n                  | FLOAT\n                  | STRING\n                  | LOCAL_VAR\n                  | indexing\n                  | function_callfunction_call : LOCAL_VAR L_PAREN argument_list R_PAREN\n                     | LOCAL_VAR L_PAREN R_PAREN\n                     | LOCAL_VAR argument_list\n                     | LOCAL_VARmethod_call : LOCAL_VAR DOT function_call\n                   | GLOBAL_VAR DOT function_call\n                   | INSTANCE_VAR DOT function_call\n                   | CLASS_VAR DOT function_call\n                   | CONSTANT DOT function_callindexing : LOCAL_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN\n                | GLOBAL_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN\n                | INSTANCE_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN\n                | CLASS_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN\n                | LOCAL_VAR L_ULTRA_PAREN TWO_POINTS expression R_ULTRA_PAREN\n                | GLOBAL_VAR L_ULTRA_PAREN TWO_POINTS expression R_ULTRA_PAREN\n                | INSTANCE_VAR L_ULTRA_PAREN TWO_POINTS expression R_ULTRA_PAREN\n                | CLASS_VAR L_ULTRA_PAREN TWO_POINTS expression R_ULTRA_PAREN\n                | indexing L_ULTRA_PAREN expression R_ULTRA_PAREN\n                | indexing L_ULTRA_PAREN TWO_POINTS expression R_ULTRA_PARENarray_assignament : indexing ASSIGN expressioncomparison_operator : EQUALS\n                           | DIFFERENT\n                           | LESS\n                           | LESS_EQUAL\n                           | GREATER\n                           | GREATER_EQUALempty :'
    
_lr_action_items = {'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,26,27,28,29,30,31,35,36,37,38,39,45,46,47,48,65,66,67,68,69,76,82,97,98,99,100,104,105,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,130,131,132,135,136,137,141,142,144,145,148,150,151,154,156,157,160,161,162,163,166,167,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,219,220,221,223,224,225,226,227,228,229,230,231,232,235,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-35,-109,-40,-41,-64,-65,-66,-67,-111,-85,-86,-87,-88,-106,-107,-108,-3,-30,-36,-89,-90,-109,-34,-114,18,-22,18,18,18,18,18,-104,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,-105,-33,-38,-23,-115,-116,-58,-113,-24,-117,-59,-25,-118,-60,-26,-119,-61,-27,-120,18,18,18,18,-77,18,18,18,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,18,-80,-82,-18,-68,18,-76,-75,-78,-74,-72,18,-71,-130,-39,-50,-42,-125,-52,-126,-54,-127,-56,-128,-79,-81,18,18,18,-69,18,-73,18,18,-70,]),'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,26,27,28,29,30,31,35,36,37,38,39,45,46,47,48,65,66,67,68,69,76,82,97,98,99,100,104,105,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,130,131,132,135,136,137,141,142,144,145,148,150,151,154,156,157,160,161,162,163,166,167,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,219,220,221,223,224,225,226,227,228,229,230,231,232,235,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-35,-109,-40,-41,-64,-65,-66,-67,-111,-85,-86,-87,-88,-106,-107,-108,-3,-30,-36,-89,-90,-109,-34,-114,20,-22,20,20,20,20,20,-104,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,-105,-33,-38,-23,-115,-116,-58,-113,-24,-117,-59,-25,-118,-60,-26,-119,-61,-27,-120,20,20,20,20,-77,20,20,20,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,20,-80,-82,-18,-68,20,-76,-75,-78,-74,-72,20,-71,-130,-39,-50,-42,-125,-52,-126,-54,-127,-56,-128,-79,-81,20,20,20,-69,20,-73,20,20,-70,]),'LOCAL_VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,128,130,131,132,133,134,135,136,137,139,141,142,143,144,145,147,148,149,150,151,153,154,155,156,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,256,257,258,259,260,261,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,69,69,69,69,-40,-41,-64,-65,-66,-67,97,69,-111,-85,-86,-87,-88,69,69,69,69,69,-106,-107,-108,-3,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-30,-36,-89,-90,69,69,-34,69,135,69,69,69,-114,69,135,69,69,69,135,69,69,69,135,69,69,69,135,21,-22,21,21,69,69,21,21,21,-104,69,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,69,-105,-33,-38,-23,69,195,69,-116,-58,69,-113,-24,69,-117,-59,69,-25,69,-118,-60,69,-26,69,-119,-61,69,-27,-120,21,21,218,21,21,69,-47,-48,-49,69,-132,-133,-136,-134,-137,-135,-77,21,21,21,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,21,-80,-82,69,-18,-68,21,69,-76,-75,-78,-74,-72,21,-71,-130,-39,-50,69,69,-42,195,69,-125,-52,-126,-54,-127,-56,-128,-79,-81,255,21,21,21,-69,21,-73,21,21,-70,]),'GLOBAL_VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,79,80,81,82,83,85,86,87,89,90,91,93,94,95,97,98,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,128,130,131,132,133,135,136,137,139,141,142,143,144,145,147,148,149,150,151,153,154,155,156,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[22,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,70,70,70,70,-40,-41,-64,-65,-66,-67,70,-111,-85,-86,-87,-88,70,70,70,70,70,-106,-107,-108,-3,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-30,-36,-89,-90,70,70,-34,70,70,70,70,-114,70,70,70,70,70,70,70,70,70,70,22,-22,22,22,70,70,22,22,22,-104,70,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,70,-105,-33,-38,-23,70,70,-116,-58,70,-113,-24,70,-117,-59,70,-25,70,-118,-60,70,-26,70,-119,-61,70,-27,-120,22,22,70,22,22,70,-47,-48,-49,70,-132,-133,-136,-134,-137,-135,-77,22,22,22,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,22,-80,-82,70,-18,-68,22,70,-76,-75,-78,-74,-72,22,-71,-130,-39,-50,70,70,-42,70,-125,-52,-126,-54,-127,-56,-128,-79,-81,22,22,22,-69,22,-73,22,22,-70,]),'INSTANCE_VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,79,80,81,82,83,85,86,87,89,90,91,93,94,95,97,98,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,128,130,131,132,133,135,136,137,139,141,142,143,144,145,147,148,149,150,151,153,154,155,156,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[23,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,71,71,71,71,-40,-41,-64,-65,-66,-67,71,-111,-85,-86,-87,-88,71,71,71,71,71,-106,-107,-108,-3,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-30,-36,-89,-90,71,71,-34,71,71,71,71,-114,71,71,71,71,71,71,71,71,71,71,23,-22,23,23,71,71,23,23,23,-104,71,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,71,-105,-33,-38,-23,71,71,-116,-58,71,-113,-24,71,-117,-59,71,-25,71,-118,-60,71,-26,71,-119,-61,71,-27,-120,23,23,71,23,23,71,-47,-48,-49,71,-132,-133,-136,-134,-137,-135,-77,23,23,23,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,23,-80,-82,71,-18,-68,23,71,-76,-75,-78,-74,-72,23,-71,-130,-39,-50,71,71,-42,71,-125,-52,-126,-54,-127,-56,-128,-79,-81,23,23,23,-69,23,-73,23,23,-70,]),'CLASS_VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,79,80,81,82,83,85,86,87,89,90,91,93,94,95,97,98,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,128,130,131,132,133,135,136,137,139,141,142,143,144,145,147,148,149,150,151,153,154,155,156,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[24,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,72,72,72,72,-40,-41,-64,-65,-66,-67,72,-111,-85,-86,-87,-88,72,72,72,72,72,-106,-107,-108,-3,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-30,-36,-89,-90,72,72,-34,72,72,72,72,-114,72,72,72,72,72,72,72,72,72,72,24,-22,24,24,72,72,24,24,24,-104,72,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,72,-105,-33,-38,-23,72,72,-116,-58,72,-113,-24,72,-117,-59,72,-25,72,-118,-60,72,-26,72,-119,-61,72,-27,-120,24,24,72,24,24,72,-47,-48,-49,72,-132,-133,-136,-134,-137,-135,-77,24,24,24,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,24,-80,-82,72,-18,-68,24,72,-76,-75,-78,-74,-72,24,-71,-130,-39,-50,72,72,-42,72,-125,-52,-126,-54,-127,-56,-128,-79,-81,24,24,24,-69,24,-73,24,24,-70,]),'CONSTANT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,79,80,81,82,83,85,86,87,89,90,91,93,94,95,97,98,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,128,130,131,132,133,135,136,137,139,141,142,143,144,145,147,148,149,150,151,153,154,155,156,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[25,25,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,73,73,73,73,-40,-41,-64,-65,-66,-67,73,99,-111,-85,-86,-87,-88,73,73,73,73,73,-106,-107,-108,-3,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-30,-36,-89,-90,73,73,-34,73,73,73,73,-114,73,73,73,73,73,73,73,73,73,73,25,-22,25,25,73,73,25,25,25,-104,73,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,73,-105,-33,-38,-23,73,73,-116,-58,73,-113,-24,73,-117,-59,73,-25,73,-118,-60,73,-26,73,-119,-61,73,-27,-120,25,25,73,25,25,73,-47,-48,-49,73,-132,-133,-136,-134,-137,-135,-77,25,25,25,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,25,-80,-82,73,-18,-68,25,73,-76,-75,-78,-74,-72,25,-71,-130,-39,-50,73,73,-42,73,-125,-52,-126,-54,-127,-56,-128,-79,-81,25,25,25,-69,25,-73,25,25,-70,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,26,27,28,29,30,31,35,36,37,38,39,45,46,47,48,65,66,67,68,69,76,82,97,98,99,100,104,105,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,130,131,132,135,136,137,141,142,144,145,148,150,151,154,156,157,160,161,162,163,166,167,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,219,220,221,223,224,225,226,227,228,229,230,231,232,235,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[32,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-35,-109,-40,-41,-64,-65,-66,-67,-111,-85,-86,-87,-88,-106,-107,-108,-3,-30,-36,-89,-90,-109,-34,-114,32,-22,32,32,32,32,32,-104,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,-105,-33,-38,-23,-115,-116,-58,-113,-24,-117,-59,-25,-118,-60,-26,-119,-61,-27,-120,32,32,32,32,-77,32,32,32,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,32,-80,-82,-18,-68,32,-76,-75,-78,-74,-72,32,-71,-130,-39,-50,-42,-125,-52,-126,-54,-127,-56,-128,-79,-81,32,32,32,-69,32,-73,32,32,-70,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,26,27,28,29,30,31,35,36,37,38,39,45,46,47,48,65,66,67,68,69,76,82,97,98,99,100,104,105,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,130,131,132,135,136,137,141,142,144,145,148,150,151,154,156,157,160,161,162,163,166,167,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,219,220,221,223,224,225,226,227,228,229,230,231,232,235,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[33,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-35,-109,-40,-41,-64,-65,-66,-67,-111,-85,-86,-87,-88,-106,-107,-108,-3,-30,-36,-89,-90,-109,-34,-114,33,-22,33,33,33,33,33,-104,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,-105,-33,-38,-23,-115,-116,-58,-113,-24,-117,-59,-25,-118,-60,-26,-119,-61,-27,-120,33,33,33,33,-77,33,33,33,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,33,-80,-82,-18,-68,33,-76,-75,-78,-74,-72,33,-71,-130,-39,-50,-42,-125,-52,-126,-54,-127,-56,-128,-79,-81,33,33,33,-69,33,-73,33,33,-70,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,26,27,28,29,30,31,35,36,37,38,39,45,46,47,48,65,66,67,68,69,76,82,97,98,99,100,104,105,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,130,131,132,135,136,137,141,142,144,145,148,150,151,154,156,157,160,161,162,163,166,167,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,219,220,221,223,224,225,226,227,228,229,230,231,232,235,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[34,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-35,-109,-40,-41,-64,-65,-66,-67,-111,-85,-86,-87,-88,-106,-107,-108,-3,-30,-36,-89,-90,-109,-34,-114,34,-22,34,34,34,34,34,-104,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,-105,-33,-38,-23,-115,-116,-58,-113,-24,-117,-59,-25,-118,-60,-26,-119,-61,-27,-120,34,34,34,34,-77,34,34,34,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,34,-80,-82,-18,-68,34,-76,-75,-78,-74,-72,34,-71,-130,-39,-50,-42,-125,-52,-126,-54,-127,-56,-128,-79,-81,34,34,34,-69,34,-73,34,34,-70,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,26,27,28,29,30,31,35,36,37,38,39,45,46,47,48,65,66,67,68,69,76,82,97,98,99,100,104,105,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,130,131,132,135,136,137,141,142,144,145,148,150,151,154,156,157,160,161,162,163,166,167,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,219,220,221,223,224,225,226,227,228,229,230,231,232,235,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[40,40,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-35,-109,-40,-41,-64,-65,-66,-67,-111,-85,-86,-87,-88,-106,-107,-108,-3,-30,-36,-89,-90,-109,-34,-114,40,-22,40,40,40,40,40,-104,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,-105,-33,-38,-23,-115,-116,-58,-113,-24,-117,-59,-25,-118,-60,-26,-119,-61,-27,-120,40,40,40,40,-77,40,40,40,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,40,-80,-82,-18,-68,40,-76,-75,-78,-74,-72,40,-71,-130,-39,-50,-42,-125,-52,-126,-54,-127,-56,-128,-79,-81,40,40,40,-69,40,-73,40,40,-70,]),'UNTIL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,26,27,28,29,30,31,35,36,37,38,39,45,46,47,48,65,66,67,68,69,76,82,97,98,99,100,104,105,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,130,131,132,135,136,137,141,142,144,145,148,150,151,154,156,157,160,161,162,163,166,167,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,219,220,221,223,224,225,226,227,228,229,230,231,232,235,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[41,41,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-35,-109,-40,-41,-64,-65,-66,-67,-111,-85,-86,-87,-88,-106,-107,-108,-3,-30,-36,-89,-90,-109,-34,-114,41,-22,41,41,41,41,41,-104,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,-105,-33,-38,-23,-115,-116,-58,-113,-24,-117,-59,-25,-118,-60,-26,-119,-61,-27,-120,41,41,41,41,-77,41,41,41,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,41,-80,-82,-18,-68,41,-76,-75,-78,-74,-72,41,-71,-130,-39,-50,-42,-125,-52,-126,-54,-127,-56,-128,-79,-81,41,41,41,-69,41,-73,41,41,-70,]),'UNLESS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,26,27,28,29,30,31,35,36,37,38,39,45,46,47,48,65,66,67,68,69,76,82,97,98,99,100,104,105,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,130,131,132,135,136,137,141,142,144,145,148,150,151,154,156,157,160,161,162,163,166,167,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,219,220,221,223,224,225,226,227,228,229,230,231,232,235,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[42,42,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-35,-109,-40,-41,-64,-65,-66,-67,-111,-85,-86,-87,-88,-106,-107,-108,-3,-30,-36,-89,-90,-109,-34,-114,42,-22,42,42,42,42,42,-104,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,-105,-33,-38,-23,-115,-116,-58,-113,-24,-117,-59,-25,-118,-60,-26,-119,-61,-27,-120,42,42,42,42,-77,42,42,42,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,42,-80,-82,-18,-68,42,-76,-75,-78,-74,-72,42,-71,-130,-39,-50,-42,-125,-52,-126,-54,-127,-56,-128,-79,-81,42,42,42,-69,42,-73,42,42,-70,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,26,27,28,29,30,31,35,36,37,38,39,45,46,47,48,65,66,67,68,69,76,82,97,98,99,100,104,105,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,130,131,132,135,136,137,141,142,144,145,148,150,151,154,156,157,160,161,162,163,166,167,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,219,220,221,223,224,225,226,227,228,229,230,231,232,235,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[43,43,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-35,-109,-40,-41,-64,-65,-66,-67,-111,-85,-86,-87,-88,-106,-107,-108,-3,-30,-36,-89,-90,-109,-34,-114,43,-22,43,43,43,43,43,-104,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,-105,-33,-38,-23,-115,-116,-58,-113,-24,-117,-59,-25,-118,-60,-26,-119,-61,-27,-120,43,43,43,43,-77,43,43,43,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,43,-80,-82,-18,-68,43,-76,-75,-78,-74,-72,43,-71,-130,-39,-50,-42,-125,-52,-126,-54,-127,-56,-128,-79,-81,43,43,43,-69,43,-73,43,43,-70,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,79,80,81,82,83,85,86,87,89,90,91,93,94,95,97,98,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,128,130,131,132,133,135,136,137,139,141,142,143,144,145,147,148,149,150,151,153,154,155,156,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[44,44,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,44,44,44,44,-40,-41,-64,-65,-66,-67,44,-111,-85,-86,-87,-88,102,102,102,102,44,-106,-107,-108,-3,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-30,-36,-89,-90,44,44,-34,44,44,44,44,-114,44,44,44,44,44,44,44,44,44,44,44,-22,44,44,102,102,44,44,44,-104,44,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,44,-105,-33,-38,-23,44,44,-116,-58,44,-113,-24,44,-117,-59,44,-25,44,-118,-60,44,-26,44,-119,-61,44,-27,-120,44,44,44,44,44,102,-47,-48,-49,44,-132,-133,-136,-134,-137,-135,-77,44,44,44,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,44,-80,-82,44,-18,-68,44,102,-76,-75,-78,-74,-72,44,-71,-130,-39,-50,44,44,-42,44,-125,-52,-126,-54,-127,-56,-128,-79,-81,44,44,44,-69,44,-73,44,44,-70,]),'L_PAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,79,80,81,82,83,85,86,87,89,90,91,93,94,95,97,98,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,128,130,131,132,133,135,136,137,139,141,142,143,144,145,147,148,149,150,151,153,154,155,156,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,64,19,75,81,-40,-41,-64,-65,-66,-67,19,-111,-85,-86,-87,-88,103,103,103,103,19,-106,-107,-108,-3,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-30,-36,-89,-90,81,19,-34,19,19,19,19,-114,19,19,19,19,19,19,19,19,19,19,164,-22,19,19,103,103,19,19,19,-104,19,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,19,-105,-33,-38,-23,19,81,-116,-58,19,-113,-24,19,-117,-59,19,-25,19,-118,-60,19,-26,19,-119,-61,19,-27,-120,19,19,19,19,19,103,-47,-48,-49,19,-132,-133,-136,-134,-137,-135,-77,19,19,19,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,19,-80,-82,81,-18,-68,19,103,-76,-75,-78,-74,-72,19,-71,-130,-39,-50,19,19,-42,19,-125,-52,-126,-54,-127,-56,-128,-79,-81,19,19,19,-69,19,-73,19,19,-70,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,79,80,81,82,83,85,86,87,89,90,91,93,94,95,97,98,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,128,130,131,132,133,135,136,137,139,141,142,143,144,145,147,148,149,150,151,153,154,155,156,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[45,45,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,45,45,45,45,-40,-41,-64,-65,-66,-67,45,-111,-85,-86,-87,-88,45,45,45,45,45,-106,-107,-108,-3,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-30,-36,-89,-90,45,45,-34,45,45,45,45,-114,45,45,45,45,45,45,45,45,45,45,45,-22,45,45,45,45,45,45,45,-104,45,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,45,-105,-33,-38,-23,45,45,-116,-58,45,-113,-24,45,-117,-59,45,-25,45,-118,-60,45,-26,45,-119,-61,45,-27,-120,45,45,45,45,45,45,-47,-48,-49,45,-132,-133,-136,-134,-137,-135,-77,45,45,45,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,45,-80,-82,45,-18,-68,45,45,-76,-75,-78,-74,-72,45,-71,-130,-39,-50,45,45,-42,45,-125,-52,-126,-54,-127,-56,-128,-79,-81,45,45,45,-69,45,-73,45,45,-70,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,79,80,81,82,83,85,86,87,89,90,91,93,94,95,97,98,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,128,130,131,132,133,135,136,137,139,141,142,143,144,145,147,148,149,150,151,153,154,155,156,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[46,46,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,46,46,46,46,-40,-41,-64,-65,-66,-67,46,-111,-85,-86,-87,-88,46,46,46,46,46,-106,-107,-108,-3,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-30,-36,-89,-90,46,46,-34,46,46,46,46,-114,46,46,46,46,46,46,46,46,46,46,46,-22,46,46,46,46,46,46,46,-104,46,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,46,-105,-33,-38,-23,46,46,-116,-58,46,-113,-24,46,-117,-59,46,-25,46,-118,-60,46,-26,46,-119,-61,46,-27,-120,46,46,46,46,46,46,-47,-48,-49,46,-132,-133,-136,-134,-137,-135,-77,46,46,46,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,46,-80,-82,46,-18,-68,46,46,-76,-75,-78,-74,-72,46,-71,-130,-39,-50,46,46,-42,46,-125,-52,-126,-54,-127,-56,-128,-79,-81,46,46,46,-69,46,-73,46,46,-70,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,79,80,81,82,83,85,86,87,89,90,91,93,94,95,97,98,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,128,130,131,132,133,134,135,136,137,139,141,142,143,144,145,147,148,149,150,151,153,154,155,156,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[47,47,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,47,47,47,47,-40,-41,-64,-65,-66,-67,47,-111,-85,-86,-87,-88,47,47,47,47,47,-106,-107,-108,-3,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-30,-36,-89,-90,47,47,-34,47,47,47,47,-114,47,47,47,47,47,47,47,47,47,47,47,-22,47,47,47,47,47,47,47,-104,47,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,47,-105,-33,-38,-23,47,198,47,-116,-58,47,-113,-24,47,-117,-59,47,-25,47,-118,-60,47,-26,47,-119,-61,47,-27,-120,47,47,47,47,47,47,-47,-48,-49,47,-132,-133,-136,-134,-137,-135,-77,47,47,47,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,47,-80,-82,47,-18,-68,47,47,-76,-75,-78,-74,-72,47,-71,-130,-39,-50,47,47,-42,198,47,-125,-52,-126,-54,-127,-56,-128,-79,-81,47,47,47,-69,47,-73,47,47,-70,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,26,27,28,29,30,31,35,36,37,38,39,45,46,47,48,65,66,67,68,69,76,82,98,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,130,131,132,135,136,137,141,142,144,145,148,150,151,154,156,157,160,161,186,188,189,190,193,199,201,203,204,207,208,211,212,215,219,220,226,227,229,230,231,232,235,238,239,240,241,242,243,244,245,256,258,261,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-35,-109,-40,-41,-64,-65,-66,-67,-111,-85,-86,-87,-88,-106,-107,-108,-3,-30,-36,-89,-90,-109,-34,-114,-22,-104,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,-105,-33,-38,-23,-115,-116,-58,-113,-24,-117,-59,-25,-118,-60,-26,-119,-61,-27,-120,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,-80,-18,-68,-74,-72,-71,-130,-39,-50,-42,-125,-52,-126,-54,-127,-56,-128,-79,-69,-73,-70,]),'END':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,26,27,28,29,30,31,35,36,37,38,39,45,46,47,48,65,66,67,68,69,76,82,98,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,130,131,132,135,136,137,141,142,144,145,148,150,151,154,156,157,160,161,163,165,166,167,183,184,185,186,188,189,190,193,199,201,203,204,207,208,211,212,214,215,219,220,226,227,229,230,231,232,235,238,239,240,241,242,243,244,245,248,250,256,258,260,261,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-35,-109,-40,-41,-64,-65,-66,-67,-111,-85,-86,-87,-88,-106,-107,-108,-3,-30,-36,-89,-90,-109,-34,-114,-22,-104,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,-105,-33,-38,-23,-115,-116,-58,-113,-24,-117,-59,-25,-118,-60,-26,-119,-61,-27,-120,215,219,-19,220,226,227,229,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,245,-80,-18,-68,-74,-72,-71,-130,-39,-50,-42,-125,-52,-126,-54,-127,-56,-128,-79,256,258,-69,-73,261,-70,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,26,27,28,29,30,31,35,36,37,38,39,45,46,47,48,65,66,67,68,69,76,82,98,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,130,131,132,135,136,137,141,142,144,145,148,150,151,154,156,157,160,161,167,184,186,188,189,190,193,199,201,203,204,207,208,211,212,215,219,220,226,227,229,230,231,232,235,238,239,240,241,242,243,244,245,256,257,258,261,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-35,-109,-40,-41,-64,-65,-66,-67,-111,-85,-86,-87,-88,-106,-107,-108,-3,-30,-36,-89,-90,-109,-34,-114,-22,-104,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,-105,-33,-38,-23,-115,-116,-58,-113,-24,-117,-59,-25,-118,-60,-26,-119,-61,-27,-120,221,228,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,-80,-18,-68,-74,-72,-71,-130,-39,-50,-42,-125,-52,-126,-54,-127,-56,-128,-79,-69,259,-73,-70,]),'ELSIF':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,26,27,28,29,30,31,35,36,37,38,39,45,46,47,48,65,66,67,68,69,76,82,98,107,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,128,130,131,132,135,136,137,141,142,144,145,148,150,151,154,156,157,160,161,167,186,188,189,190,193,199,201,203,204,207,208,211,212,215,219,220,226,227,229,230,231,232,235,238,239,240,241,242,243,244,245,256,258,261,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-35,-109,-40,-41,-64,-65,-66,-67,-111,-85,-86,-87,-88,-106,-107,-108,-3,-30,-36,-89,-90,-109,-34,-114,-22,-104,-131,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-29,-105,-33,-38,-23,-115,-116,-58,-113,-24,-117,-59,-25,-118,-60,-26,-119,-61,-27,-120,222,-129,-28,-37,-32,-51,-121,-112,-53,-122,-55,-123,-57,-124,-80,-18,-68,-74,-72,-71,-130,-39,-50,-42,-125,-52,-126,-54,-127,-56,-128,-79,-69,-73,-70,]),'PLUS':([13,15,17,21,35,36,37,38,39,45,46,47,66,67,68,69,74,82,98,101,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,141,142,144,145,146,148,150,151,152,154,156,157,158,160,161,180,182,186,187,189,194,199,200,201,204,205,208,209,212,213,218,224,230,238,240,242,244,251,252,254,],[-90,-89,51,-109,-111,-85,-86,-87,-88,-106,-107,-108,51,-89,-90,-109,51,-114,51,51,51,51,51,-91,-92,-93,-94,-95,51,51,51,51,51,51,51,51,51,-105,51,-115,-116,51,51,-113,51,-117,51,51,51,-118,51,51,51,-119,51,51,51,-120,51,51,-129,51,51,51,-121,51,-112,-122,51,-123,51,-124,51,-109,51,-130,-125,-126,-127,-128,51,51,51,]),'MINUS':([13,15,17,21,35,36,37,38,39,45,46,47,66,67,68,69,74,82,98,101,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,141,142,144,145,146,148,150,151,152,154,156,157,158,160,161,180,182,186,187,189,194,199,200,201,204,205,208,209,212,213,218,224,230,238,240,242,244,251,252,254,],[-90,-89,52,-109,-111,-85,-86,-87,-88,-106,-107,-108,52,-89,-90,-109,52,-114,52,52,52,52,52,-91,-92,-93,-94,-95,52,52,52,52,52,52,52,52,52,-105,52,-115,-116,52,52,-113,52,-117,52,52,52,-118,52,52,52,-119,52,52,52,-120,52,52,-129,52,52,52,-121,52,-112,-122,52,-123,52,-124,52,-109,52,-130,-125,-126,-127,-128,52,52,52,]),'MULTIPLY':([13,15,17,21,35,36,37,38,39,45,46,47,66,67,68,69,74,82,98,101,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,141,142,144,145,146,148,150,151,152,154,156,157,158,160,161,180,182,186,187,189,194,199,200,201,204,205,208,209,212,213,218,224,230,238,240,242,244,251,252,254,],[-90,-89,53,-109,-111,-85,-86,-87,-88,-106,-107,-108,53,-89,-90,-109,53,-114,53,53,53,53,53,53,53,-93,-94,-95,53,53,53,53,53,53,53,53,53,-105,53,-115,-116,53,53,-113,53,-117,53,53,53,-118,53,53,53,-119,53,53,53,-120,53,53,-129,53,53,53,-121,53,-112,-122,53,-123,53,-124,53,-109,53,-130,-125,-126,-127,-128,53,53,53,]),'DIVIDE':([13,15,17,21,35,36,37,38,39,45,46,47,66,67,68,69,74,82,98,101,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,141,142,144,145,146,148,150,151,152,154,156,157,158,160,161,180,182,186,187,189,194,199,200,201,204,205,208,209,212,213,218,224,230,238,240,242,244,251,252,254,],[-90,-89,54,-109,-111,-85,-86,-87,-88,-106,-107,-108,54,-89,-90,-109,54,-114,54,54,54,54,54,54,54,-93,-94,-95,54,54,54,54,54,54,54,54,54,-105,54,-115,-116,54,54,-113,54,-117,54,54,54,-118,54,54,54,-119,54,54,54,-120,54,54,-129,54,54,54,-121,54,-112,-122,54,-123,54,-124,54,-109,54,-130,-125,-126,-127,-128,54,54,54,]),'MODULE':([13,15,17,21,35,36,37,38,39,45,46,47,66,67,68,69,74,82,98,101,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,141,142,144,145,146,148,150,151,152,154,156,157,158,160,161,180,182,186,187,189,194,199,200,201,204,205,208,209,212,213,218,224,230,238,240,242,244,251,252,254,],[-90,-89,55,-109,-111,-85,-86,-87,-88,-106,-107,-108,55,-89,-90,-109,55,-114,55,55,55,55,55,55,55,-93,-94,-95,55,55,55,55,55,55,55,55,55,-105,55,-115,-116,55,55,-113,55,-117,55,55,55,-118,55,55,55,-119,55,55,55,-120,55,55,-129,55,55,55,-121,55,-112,-122,55,-123,55,-124,55,-109,55,-130,-125,-126,-127,-128,55,55,55,]),'EQUALS':([13,15,17,21,35,36,37,38,39,45,46,47,66,67,68,69,74,82,98,101,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,141,142,144,145,146,148,150,151,152,154,156,157,158,160,161,180,182,186,187,189,194,199,200,201,204,205,208,209,212,213,218,224,230,238,240,242,244,251,252,254,],[-90,-89,56,-109,-111,-85,-86,-87,-88,-106,-107,-108,56,-89,-90,-109,56,-114,56,173,56,56,56,-91,-92,-93,-94,-95,None,None,None,None,None,None,56,56,56,-105,56,-115,-116,56,56,-113,56,-117,56,56,56,-118,56,56,56,-119,56,56,56,-120,173,173,-129,56,56,56,-121,56,-112,-122,56,-123,56,-124,56,-109,56,-130,-125,-126,-127,-128,56,56,56,]),'DIFFERENT':([13,15,17,21,35,36,37,38,39,45,46,47,66,67,68,69,74,82,98,101,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,141,142,144,145,146,148,150,151,152,154,156,157,158,160,161,180,182,186,187,189,194,199,200,201,204,205,208,209,212,213,218,224,230,238,240,242,244,251,252,254,],[-90,-89,57,-109,-111,-85,-86,-87,-88,-106,-107,-108,57,-89,-90,-109,57,-114,57,174,57,57,57,-91,-92,-93,-94,-95,None,None,None,None,None,None,57,57,57,-105,57,-115,-116,57,57,-113,57,-117,57,57,57,-118,57,57,57,-119,57,57,57,-120,174,174,-129,57,57,57,-121,57,-112,-122,57,-123,57,-124,57,-109,57,-130,-125,-126,-127,-128,57,57,57,]),'GREATER':([13,15,17,21,35,36,37,38,39,45,46,47,66,67,68,69,74,82,98,101,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,141,142,144,145,146,148,150,151,152,154,156,157,158,160,161,180,182,186,187,189,194,199,200,201,204,205,208,209,212,213,218,224,230,238,240,242,244,251,252,254,],[-90,-89,58,-109,-111,-85,-86,-87,-88,-106,-107,-108,58,-89,-90,-109,58,-114,58,175,58,58,58,-91,-92,-93,-94,-95,None,None,None,None,None,None,58,58,58,-105,58,-115,-116,58,58,-113,58,-117,58,58,58,-118,58,58,58,-119,58,58,58,-120,175,175,-129,58,58,58,-121,58,-112,-122,58,-123,58,-124,58,-109,58,-130,-125,-126,-127,-128,58,58,58,]),'LESS':([13,15,17,21,35,36,37,38,39,45,46,47,66,67,68,69,74,82,98,101,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,141,142,144,145,146,148,150,151,152,154,156,157,158,160,161,180,182,186,187,189,194,199,200,201,204,205,208,209,212,213,218,224,230,238,240,242,244,251,252,254,],[-90,-89,59,-109,-111,-85,-86,-87,-88,-106,-107,-108,59,-89,-90,-109,59,-114,59,176,59,59,59,-91,-92,-93,-94,-95,None,None,None,None,None,None,59,59,59,-105,59,-115,-116,59,59,-113,59,-117,59,59,59,-118,59,59,59,-119,59,59,59,-120,176,176,-129,59,59,59,-121,59,-112,-122,59,-123,59,-124,59,-109,59,-130,-125,-126,-127,-128,59,59,59,]),'GREATER_EQUAL':([13,15,17,21,35,36,37,38,39,45,46,47,66,67,68,69,74,82,98,101,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,141,142,144,145,146,148,150,151,152,154,156,157,158,160,161,180,182,186,187,189,194,199,200,201,204,205,208,209,212,213,218,224,230,238,240,242,244,251,252,254,],[-90,-89,60,-109,-111,-85,-86,-87,-88,-106,-107,-108,60,-89,-90,-109,60,-114,60,177,60,60,60,-91,-92,-93,-94,-95,None,None,None,None,None,None,60,60,60,-105,60,-115,-116,60,60,-113,60,-117,60,60,60,-118,60,60,60,-119,60,60,60,-120,177,177,-129,60,60,60,-121,60,-112,-122,60,-123,60,-124,60,-109,60,-130,-125,-126,-127,-128,60,60,60,]),'LESS_EQUAL':([13,15,17,21,35,36,37,38,39,45,46,47,66,67,68,69,74,82,98,101,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,141,142,144,145,146,148,150,151,152,154,156,157,158,160,161,180,182,186,187,189,194,199,200,201,204,205,208,209,212,213,218,224,230,238,240,242,244,251,252,254,],[-90,-89,61,-109,-111,-85,-86,-87,-88,-106,-107,-108,61,-89,-90,-109,61,-114,61,178,61,61,61,-91,-92,-93,-94,-95,None,None,None,None,None,None,61,61,61,-105,61,-115,-116,61,61,-113,61,-117,61,61,61,-118,61,61,61,-119,61,61,61,-120,178,178,-129,61,61,61,-121,61,-112,-122,61,-123,61,-124,61,-109,61,-130,-125,-126,-127,-128,61,61,61,]),'AND':([13,15,17,21,35,36,37,38,39,45,46,47,66,67,68,69,74,82,98,100,101,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,141,142,144,145,146,148,150,151,152,154,156,157,158,160,161,179,180,181,182,186,187,189,194,199,200,201,204,205,208,209,212,213,218,223,224,225,230,238,240,242,244,249,251,252,254,],[-90,-89,62,-109,-111,-85,-86,-87,-88,-106,-107,-108,62,-89,-90,-109,62,-114,62,169,62,169,169,169,62,62,62,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,62,-105,62,-115,-116,62,62,-113,62,-117,62,62,62,-118,62,62,62,-119,62,62,62,-120,169,62,169,62,-129,62,62,62,-121,62,-112,-122,62,-123,62,-124,62,-109,169,62,-78,-130,-125,-126,-127,-128,169,62,62,62,]),'OR':([13,15,17,21,35,36,37,38,39,45,46,47,66,67,68,69,74,82,98,100,101,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,128,132,135,136,137,138,141,142,144,145,146,148,150,151,152,154,156,157,158,160,161,179,180,181,182,186,187,189,194,199,200,201,204,205,208,209,212,213,218,223,224,225,230,238,240,242,244,249,251,252,254,],[-90,-89,63,-109,-111,-85,-86,-87,-88,-106,-107,-108,63,-89,-90,-109,63,-114,63,170,63,170,170,170,63,63,63,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,63,-103,63,-105,63,-115,-116,63,63,-113,63,-117,63,63,63,-118,63,63,63,-119,63,63,63,-120,170,63,170,63,-129,63,63,63,-121,63,-112,-122,63,-123,63,-124,63,-109,170,63,-78,-130,-125,-126,-127,-128,170,63,63,63,]),'L_ULTRA_PAREN':([15,21,22,23,24,67,69,70,71,72,77,83,87,91,186,199,204,208,212,218,230,238,240,242,244,],[49,80,86,90,94,49,80,86,90,94,133,143,149,155,-129,-121,-122,-123,-124,80,-130,-125,-126,-127,-128,]),'ASSIGN':([15,21,22,23,24,25,186,199,204,208,212,230,238,240,242,244,],[50,77,83,87,91,95,-129,-121,-122,-123,-124,-130,-125,-126,-127,-128,]),'DOT':([21,22,23,24,25,69,70,71,72,73,131,218,],[78,84,88,92,96,78,84,88,92,96,191,78,]),'APPEND':([21,22,23,24,],[79,85,89,93,]),'COMMA':([35,36,37,38,39,45,46,47,65,66,67,68,69,76,82,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,129,135,136,140,141,144,150,156,161,186,189,192,194,196,197,199,201,202,204,206,208,210,212,216,218,230,238,240,242,244,251,252,253,254,255,],[-111,-85,-86,-87,-88,-106,-107,-108,127,-36,-89,-90,-109,127,127,-104,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,127,-36,-105,127,-115,-116,127,-113,-117,-118,-119,-120,-129,-37,233,-62,236,-43,-121,-112,233,-122,233,-123,233,-124,247,-83,-130,-125,-126,-127,-128,-63,-46,-44,-45,-84,]),'R_PAREN':([35,36,37,38,39,45,46,47,64,66,67,68,69,74,75,81,82,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,129,135,136,140,141,144,150,156,161,164,179,180,181,182,186,189,199,201,204,208,212,216,218,223,224,225,230,238,240,242,244,255,],[-111,-85,-86,-87,-88,-106,-107,-108,125,-36,-89,-90,-109,128,130,141,-114,-104,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,188,128,-105,190,-115,-116,201,-113,-117,-118,-119,-120,217,-77,-104,225,128,-129,-37,-121,-112,-122,-123,-124,246,-83,-76,-75,-78,-130,-125,-126,-127,-128,-84,]),'R_ULTRA_PAREN':([35,36,37,38,39,45,46,47,66,67,68,69,82,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,128,133,135,136,138,141,143,144,146,149,150,152,155,156,158,161,186,187,189,192,194,199,200,201,202,204,205,206,208,209,210,212,213,230,238,240,242,244,251,],[-111,-85,-86,-87,-88,-106,-107,-108,-36,-89,-90,-109,-114,-104,186,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-105,193,-115,-116,199,-113,203,-117,204,207,-118,208,211,-119,212,-120,-129,230,-37,232,-62,-121,238,-112,239,-122,240,241,-123,242,243,-124,244,-130,-125,-126,-127,-128,-63,]),'OR_OPERATOR':([35,36,37,38,39,45,46,47,66,67,68,69,82,100,104,105,106,107,111,112,113,114,115,116,117,118,119,120,121,122,123,128,135,136,141,144,150,156,161,179,181,186,189,199,201,204,208,212,223,224,225,230,238,240,242,244,249,],[-111,-85,-86,-87,-88,-106,-107,-108,-36,-89,-90,-109,-114,171,171,171,171,-104,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-105,-115,-116,-113,-117,-118,-119,-120,-77,171,-129,-37,-121,-112,-122,-123,-124,171,-75,-78,-130,-125,-126,-127,-128,171,]),'R_MAYUS_PAREN':([35,36,37,38,39,45,46,47,66,67,68,69,82,107,111,112,113,114,115,116,117,118,119,120,121,122,123,128,135,136,141,144,150,156,161,186,189,196,197,199,201,204,208,212,230,238,240,242,244,252,253,254,],[-111,-85,-86,-87,-88,-106,-107,-108,-36,-89,-90,-109,-114,-104,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-105,-115,-116,-113,-117,-118,-119,-120,-129,-37,235,-43,-121,-112,-122,-123,-124,-130,-125,-126,-127,-128,-46,-44,-45,]),'TWO_POINTS':([49,80,86,90,94,195,],[109,139,147,153,159,234,]),'GETS':([77,],[131,]),'L_MAYUS_PAREN':([77,],[134,]),'CHOMP':([191,],[231,]),'HASHARROW':([198,],[237,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,97,99,100,104,105,106,162,221,228,249,259,],[2,163,166,167,183,184,185,214,248,250,257,260,]),'statement':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[3,48,3,3,3,3,3,3,3,48,48,48,48,48,48,48,3,3,48,3,48,48,3,48,]),'print_statement':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'puts_statement':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'input_statement':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'assignment_statement':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'data_structure':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'control_structure':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'function_definition':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'return_statement':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'class_definition':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'method_call':([0,2,18,19,20,21,33,40,41,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,75,77,79,80,81,83,85,86,87,89,90,91,93,94,95,97,99,100,102,103,104,105,106,109,127,133,135,139,143,147,149,153,155,159,162,163,164,166,167,168,172,173,174,175,176,177,178,183,184,185,214,218,221,222,228,233,234,237,248,249,250,257,259,260,],[13,13,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,13,13,13,68,68,13,13,13,68,68,68,68,68,68,68,68,68,68,68,13,13,68,13,13,68,68,68,68,68,68,68,68,13,13,13,13,68,13,68,13,68,68,68,13,13,13,13,13,13,]),'array_append':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'indexing':([0,2,18,19,20,21,33,40,41,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,75,77,79,80,81,83,85,86,87,89,90,91,93,94,95,97,99,100,102,103,104,105,106,109,127,133,135,139,143,147,149,153,155,159,162,163,164,166,167,168,172,173,174,175,176,177,178,183,184,185,214,218,221,222,228,233,234,237,248,249,250,257,259,260,],[15,15,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,15,15,15,67,67,15,15,15,67,67,67,67,67,67,67,67,67,67,67,15,15,67,15,15,67,67,67,67,67,67,67,67,15,15,15,15,67,15,67,15,67,67,67,15,15,15,15,15,15,]),'array_assignament':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'expression':([0,2,18,19,20,21,33,40,41,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,75,77,79,80,81,83,85,86,87,89,90,91,93,94,95,97,99,100,102,103,104,105,106,109,127,133,135,139,143,147,149,153,155,159,162,163,164,166,167,168,172,173,174,175,176,177,178,183,184,185,214,218,221,222,228,233,234,237,248,249,250,257,259,260,],[17,17,66,74,66,66,98,101,101,101,101,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,66,126,132,137,138,126,142,145,146,148,151,152,154,157,158,160,17,17,17,180,182,17,17,17,187,189,194,66,200,194,205,194,209,194,213,17,17,74,17,17,101,224,116,117,118,119,120,121,17,17,17,17,66,17,101,17,251,252,254,17,17,17,17,17,17,]),'array_definition':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'hash_definition':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'if_statement':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'until_statement':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'unless_statement':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'while_statement':([0,2,97,99,100,104,105,106,162,163,166,167,183,184,185,214,221,228,248,249,250,257,259,260,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'function_call':([0,2,18,19,20,21,33,40,41,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,75,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,109,127,133,135,139,143,147,149,153,155,159,162,163,164,166,167,168,172,173,174,175,176,177,178,183,184,185,214,218,221,222,228,233,234,237,248,249,250,257,259,260,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,136,35,35,35,35,144,35,35,35,150,35,35,35,156,35,35,35,161,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'expression_binop':([0,2,18,19,20,21,33,40,41,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,75,77,79,80,81,83,85,86,87,89,90,91,93,94,95,97,99,100,102,103,104,105,106,109,127,133,135,139,143,147,149,153,155,159,162,163,164,166,167,168,172,173,174,175,176,177,178,183,184,185,214,218,221,222,228,233,234,237,248,249,250,257,259,260,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'expression_not':([0,2,18,19,20,21,33,40,41,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,75,77,79,80,81,83,85,86,87,89,90,91,93,94,95,97,99,100,102,103,104,105,106,109,127,133,135,139,143,147,149,153,155,159,162,163,164,166,167,168,172,173,174,175,176,177,178,183,184,185,214,218,221,222,228,233,234,237,248,249,250,257,259,260,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'expression_group':([0,2,18,19,20,21,33,40,41,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,75,77,79,80,81,83,85,86,87,89,90,91,93,94,95,97,99,100,102,103,104,105,106,109,127,133,135,139,143,147,149,153,155,159,162,163,164,166,167,168,172,173,174,175,176,177,178,183,184,185,214,218,221,222,228,233,234,237,248,249,250,257,259,260,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'expression_term':([0,2,18,19,20,21,33,40,41,42,43,44,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,75,77,79,80,81,83,85,86,87,89,90,91,93,94,95,97,99,100,102,103,104,105,106,109,127,133,135,139,143,147,149,153,155,159,162,163,164,166,167,168,172,173,174,175,176,177,178,183,184,185,214,218,221,222,228,233,234,237,248,249,250,257,259,260,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'argument_list':([18,20,21,64,69,75,81,135,218,],[65,76,82,124,82,129,140,82,82,]),'condition':([40,41,42,43,102,103,168,222,],[100,104,105,106,179,181,223,249,]),'parameter_list':([97,],[162,]),'class_body':([99,],[165,]),'logical_operator':([100,104,105,106,179,181,223,249,],[168,168,168,168,168,168,168,168,]),'comparison_operator':([101,180,182,],[172,172,172,]),'element_list':([133,143,149,155,],[192,202,206,210,]),'hash_element_list':([134,],[196,]),'hash_element':([134,236,],[197,253,]),'parameter_list_inner':([164,],[216,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','analizadorSintactico.py',16),
  ('statement_list -> statement','statement_list',1,'p_statement_list','analizadorSintactico.py',21),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','analizadorSintactico.py',22),
  ('statement -> print_statement','statement',1,'p_statement','analizadorSintactico.py',30),
  ('statement -> puts_statement','statement',1,'p_statement','analizadorSintactico.py',31),
  ('statement -> input_statement','statement',1,'p_statement','analizadorSintactico.py',32),
  ('statement -> assignment_statement','statement',1,'p_statement','analizadorSintactico.py',33),
  ('statement -> data_structure','statement',1,'p_statement','analizadorSintactico.py',34),
  ('statement -> control_structure','statement',1,'p_statement','analizadorSintactico.py',35),
  ('statement -> function_definition','statement',1,'p_statement','analizadorSintactico.py',36),
  ('statement -> return_statement','statement',1,'p_statement','analizadorSintactico.py',37),
  ('statement -> class_definition','statement',1,'p_statement','analizadorSintactico.py',38),
  ('statement -> method_call','statement',1,'p_statement','analizadorSintactico.py',39),
  ('statement -> array_append','statement',1,'p_statement','analizadorSintactico.py',40),
  ('statement -> indexing','statement',1,'p_statement','analizadorSintactico.py',41),
  ('statement -> array_assignament','statement',1,'p_statement','analizadorSintactico.py',42),
  ('statement -> expression','statement',1,'p_statement','analizadorSintactico.py',43),
  ('class_definition -> CLASS CONSTANT class_body END','class_definition',4,'p_class_definition','analizadorSintactico.py',48),
  ('class_body -> statement_list','class_body',1,'p_class_body','analizadorSintactico.py',53),
  ('class_statement -> function_definition','class_statement',1,'p_class_statement','analizadorSintactico.py',58),
  ('class_statement -> assignment_statement','class_statement',1,'p_class_statement','analizadorSintactico.py',59),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','analizadorSintactico.py',65),
  ('assignment_statement -> LOCAL_VAR ASSIGN expression','assignment_statement',3,'p_assignment_statement','analizadorSintactico.py',70),
  ('assignment_statement -> GLOBAL_VAR ASSIGN expression','assignment_statement',3,'p_assignment_statement','analizadorSintactico.py',71),
  ('assignment_statement -> INSTANCE_VAR ASSIGN expression','assignment_statement',3,'p_assignment_statement','analizadorSintactico.py',72),
  ('assignment_statement -> CLASS_VAR ASSIGN expression','assignment_statement',3,'p_assignment_statement','analizadorSintactico.py',73),
  ('assignment_statement -> CONSTANT ASSIGN expression','assignment_statement',3,'p_assignment_statement','analizadorSintactico.py',74),
  ('print_statement -> PRINT L_PAREN argument_list R_PAREN','print_statement',4,'p_print_statement','analizadorSintactico.py',79),
  ('print_statement -> PRINT L_PAREN R_PAREN','print_statement',3,'p_print_statement','analizadorSintactico.py',80),
  ('print_statement -> PRINT argument_list','print_statement',2,'p_print_statement','analizadorSintactico.py',81),
  ('print_statement -> PRINT','print_statement',1,'p_print_statement','analizadorSintactico.py',82),
  ('puts_statement -> PUTS L_PAREN argument_list R_PAREN','puts_statement',4,'p_puts_statement','analizadorSintactico.py',94),
  ('puts_statement -> PUTS L_PAREN R_PAREN','puts_statement',3,'p_puts_statement','analizadorSintactico.py',95),
  ('puts_statement -> PUTS argument_list','puts_statement',2,'p_puts_statement','analizadorSintactico.py',96),
  ('puts_statement -> PUTS','puts_statement',1,'p_puts_statement','analizadorSintactico.py',97),
  ('argument_list -> expression','argument_list',1,'p_argument_list','analizadorSintactico.py',109),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','analizadorSintactico.py',110),
  ('input_statement -> LOCAL_VAR ASSIGN GETS','input_statement',3,'p_input_statement','analizadorSintactico.py',118),
  ('input_statement -> LOCAL_VAR ASSIGN GETS DOT CHOMP','input_statement',5,'p_input_statement','analizadorSintactico.py',119),
  ('data_structure -> array_definition','data_structure',1,'p_data_structure','analizadorSintactico.py',127),
  ('data_structure -> hash_definition','data_structure',1,'p_data_structure','analizadorSintactico.py',128),
  ('hash_definition -> LOCAL_VAR ASSIGN L_MAYUS_PAREN hash_element_list R_MAYUS_PAREN','hash_definition',5,'p_hash_definition','analizadorSintactico.py',133),
  ('hash_element_list -> hash_element','hash_element_list',1,'p_hash_element_list','analizadorSintactico.py',138),
  ('hash_element_list -> hash_element_list COMMA hash_element','hash_element_list',3,'p_hash_element_list','analizadorSintactico.py',139),
  ('hash_element -> STRING HASHARROW expression','hash_element',3,'p_hash_element','analizadorSintactico.py',147),
  ('hash_element -> LOCAL_VAR TWO_POINTS expression','hash_element',3,'p_hash_element','analizadorSintactico.py',148),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','analizadorSintactico.py',153),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','analizadorSintactico.py',154),
  ('logical_operator -> OR_OPERATOR','logical_operator',1,'p_logical_operator','analizadorSintactico.py',155),
  ('array_definition -> LOCAL_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN','array_definition',5,'p_array_definition','analizadorSintactico.py',160),
  ('array_definition -> LOCAL_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN','array_definition',4,'p_array_definition','analizadorSintactico.py',161),
  ('array_definition -> GLOBAL_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN','array_definition',5,'p_array_definition','analizadorSintactico.py',162),
  ('array_definition -> GLOBAL_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN','array_definition',4,'p_array_definition','analizadorSintactico.py',163),
  ('array_definition -> INSTANCE_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN','array_definition',5,'p_array_definition','analizadorSintactico.py',164),
  ('array_definition -> INSTANCE_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN','array_definition',4,'p_array_definition','analizadorSintactico.py',165),
  ('array_definition -> CLASS_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN','array_definition',5,'p_array_definition','analizadorSintactico.py',166),
  ('array_definition -> CLASS_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN','array_definition',4,'p_array_definition','analizadorSintactico.py',167),
  ('array_append -> LOCAL_VAR APPEND expression','array_append',3,'p_array_append','analizadorSintactico.py',171),
  ('array_append -> GLOBAL_VAR APPEND expression','array_append',3,'p_array_append','analizadorSintactico.py',172),
  ('array_append -> INSTANCE_VAR APPEND expression','array_append',3,'p_array_append','analizadorSintactico.py',173),
  ('array_append -> CLASS_VAR APPEND expression','array_append',3,'p_array_append','analizadorSintactico.py',174),
  ('element_list -> expression','element_list',1,'p_element_list','analizadorSintactico.py',178),
  ('element_list -> element_list COMMA expression','element_list',3,'p_element_list','analizadorSintactico.py',179),
  ('control_structure -> if_statement','control_structure',1,'p_control_structure','analizadorSintactico.py',187),
  ('control_structure -> until_statement','control_structure',1,'p_control_structure','analizadorSintactico.py',188),
  ('control_structure -> unless_statement','control_structure',1,'p_control_structure','analizadorSintactico.py',189),
  ('control_structure -> while_statement','control_structure',1,'p_control_structure','analizadorSintactico.py',190),
  ('if_statement -> IF condition statement_list END','if_statement',4,'p_if_statement','analizadorSintactico.py',195),
  ('if_statement -> IF condition statement_list ELSE statement_list END','if_statement',6,'p_if_statement','analizadorSintactico.py',196),
  ('if_statement -> IF condition statement_list ELSIF condition statement_list ELSE statement_list END','if_statement',9,'p_if_statement','analizadorSintactico.py',197),
  ('while_statement -> WHILE condition statement_list END','while_statement',4,'p_while_statement','analizadorSintactico.py',205),
  ('unless_statement -> UNLESS condition statement_list END','unless_statement',4,'p_unless_statement','analizadorSintactico.py',210),
  ('unless_statement -> UNLESS condition statement_list ELSE statement_list END','unless_statement',6,'p_unless_statement','analizadorSintactico.py',211),
  ('until_statement -> UNTIL condition statement_list END','until_statement',4,'p_until_statement','analizadorSintactico.py',219),
  ('condition -> expression comparison_operator expression','condition',3,'p_condition','analizadorSintactico.py',224),
  ('condition -> condition logical_operator condition','condition',3,'p_condition','analizadorSintactico.py',225),
  ('condition -> NOT condition','condition',2,'p_condition','analizadorSintactico.py',226),
  ('condition -> L_PAREN condition R_PAREN','condition',3,'p_condition','analizadorSintactico.py',227),
  ('function_definition -> DEF LOCAL_VAR parameter_list statement_list END','function_definition',5,'p_function_definition','analizadorSintactico.py',239),
  ('function_definition -> DEF LOCAL_VAR statement_list END','function_definition',4,'p_function_definition','analizadorSintactico.py',240),
  ('parameter_list -> L_PAREN parameter_list_inner R_PAREN','parameter_list',3,'p_parameter_list','analizadorSintactico.py',249),
  ('parameter_list -> L_PAREN R_PAREN','parameter_list',2,'p_parameter_list','analizadorSintactico.py',250),
  ('parameter_list_inner -> LOCAL_VAR','parameter_list_inner',1,'p_parameter_list_inner','analizadorSintactico.py',258),
  ('parameter_list_inner -> parameter_list_inner COMMA LOCAL_VAR','parameter_list_inner',3,'p_parameter_list_inner','analizadorSintactico.py',259),
  ('expression -> expression_binop','expression',1,'p_expression','analizadorSintactico.py',267),
  ('expression -> expression_not','expression',1,'p_expression','analizadorSintactico.py',268),
  ('expression -> expression_group','expression',1,'p_expression','analizadorSintactico.py',269),
  ('expression -> expression_term','expression',1,'p_expression','analizadorSintactico.py',270),
  ('expression -> indexing','expression',1,'p_expression','analizadorSintactico.py',271),
  ('expression -> method_call','expression',1,'p_expression','analizadorSintactico.py',272),
  ('expression_binop -> expression PLUS expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',277),
  ('expression_binop -> expression MINUS expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',278),
  ('expression_binop -> expression MULTIPLY expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',279),
  ('expression_binop -> expression DIVIDE expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',280),
  ('expression_binop -> expression MODULE expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',281),
  ('expression_binop -> expression EQUALS expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',282),
  ('expression_binop -> expression DIFFERENT expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',283),
  ('expression_binop -> expression GREATER expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',284),
  ('expression_binop -> expression LESS expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',285),
  ('expression_binop -> expression GREATER_EQUAL expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',286),
  ('expression_binop -> expression LESS_EQUAL expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',287),
  ('expression_binop -> expression AND expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',288),
  ('expression_binop -> expression OR expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',289),
  ('expression_not -> NOT expression','expression_not',2,'p_expression_not','analizadorSintactico.py',313),
  ('expression_group -> L_PAREN expression R_PAREN','expression_group',3,'p_expression_group','analizadorSintactico.py',317),
  ('expression_term -> INTEGER','expression_term',1,'p_expression_term','analizadorSintactico.py',321),
  ('expression_term -> FLOAT','expression_term',1,'p_expression_term','analizadorSintactico.py',322),
  ('expression_term -> STRING','expression_term',1,'p_expression_term','analizadorSintactico.py',323),
  ('expression_term -> LOCAL_VAR','expression_term',1,'p_expression_term','analizadorSintactico.py',324),
  ('expression_term -> indexing','expression_term',1,'p_expression_term','analizadorSintactico.py',325),
  ('expression_term -> function_call','expression_term',1,'p_expression_term','analizadorSintactico.py',326),
  ('function_call -> LOCAL_VAR L_PAREN argument_list R_PAREN','function_call',4,'p_function_call','analizadorSintactico.py',332),
  ('function_call -> LOCAL_VAR L_PAREN R_PAREN','function_call',3,'p_function_call','analizadorSintactico.py',333),
  ('function_call -> LOCAL_VAR argument_list','function_call',2,'p_function_call','analizadorSintactico.py',334),
  ('function_call -> LOCAL_VAR','function_call',1,'p_function_call','analizadorSintactico.py',335),
  ('method_call -> LOCAL_VAR DOT function_call','method_call',3,'p_method_call','analizadorSintactico.py',346),
  ('method_call -> GLOBAL_VAR DOT function_call','method_call',3,'p_method_call','analizadorSintactico.py',347),
  ('method_call -> INSTANCE_VAR DOT function_call','method_call',3,'p_method_call','analizadorSintactico.py',348),
  ('method_call -> CLASS_VAR DOT function_call','method_call',3,'p_method_call','analizadorSintactico.py',349),
  ('method_call -> CONSTANT DOT function_call','method_call',3,'p_method_call','analizadorSintactico.py',350),
  ('indexing -> LOCAL_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN','indexing',4,'p_indexing','analizadorSintactico.py',355),
  ('indexing -> GLOBAL_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN','indexing',4,'p_indexing','analizadorSintactico.py',356),
  ('indexing -> INSTANCE_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN','indexing',4,'p_indexing','analizadorSintactico.py',357),
  ('indexing -> CLASS_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN','indexing',4,'p_indexing','analizadorSintactico.py',358),
  ('indexing -> LOCAL_VAR L_ULTRA_PAREN TWO_POINTS expression R_ULTRA_PAREN','indexing',5,'p_indexing','analizadorSintactico.py',359),
  ('indexing -> GLOBAL_VAR L_ULTRA_PAREN TWO_POINTS expression R_ULTRA_PAREN','indexing',5,'p_indexing','analizadorSintactico.py',360),
  ('indexing -> INSTANCE_VAR L_ULTRA_PAREN TWO_POINTS expression R_ULTRA_PAREN','indexing',5,'p_indexing','analizadorSintactico.py',361),
  ('indexing -> CLASS_VAR L_ULTRA_PAREN TWO_POINTS expression R_ULTRA_PAREN','indexing',5,'p_indexing','analizadorSintactico.py',362),
  ('indexing -> indexing L_ULTRA_PAREN expression R_ULTRA_PAREN','indexing',4,'p_indexing','analizadorSintactico.py',363),
  ('indexing -> indexing L_ULTRA_PAREN TWO_POINTS expression R_ULTRA_PAREN','indexing',5,'p_indexing','analizadorSintactico.py',364),
  ('array_assignament -> indexing ASSIGN expression','array_assignament',3,'p_array_assignament','analizadorSintactico.py',379),
  ('comparison_operator -> EQUALS','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',384),
  ('comparison_operator -> DIFFERENT','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',385),
  ('comparison_operator -> LESS','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',386),
  ('comparison_operator -> LESS_EQUAL','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',387),
  ('comparison_operator -> GREATER','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',388),
  ('comparison_operator -> GREATER_EQUAL','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',389),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',394),
]
