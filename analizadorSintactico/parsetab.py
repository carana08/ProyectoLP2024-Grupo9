
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightNOTleftANDleftORnonassocLESSGREATERLESS_EQUALGREATER_EQUALEQUALSDIFFERENTleftPLUSMINUSleftMULTIPLYDIVIDEMODULEAND APPEND ASSIGN BEGIN CHOMP CLASS CLASS_VAR COMMA CONSTANT DEF DIFFERENT DIVIDE DOT ELSE ELSIF END EQUALS FLOAT GETS GLOBAL_VAR GREATER GREATER_EQUAL HASHARROW IF INSTANCE_VAR INTEGER LESS LESS_EQUAL LOCAL_VAR L_MAYUS_PAREN L_PAREN L_ULTRA_PAREN MINUS MODULE MULTIPLY NIL NOT OR OR_OPERATOR PLUS PRINT PUTS RETURN R_MAYUS_PAREN R_PAREN R_ULTRA_PAREN STRING THEN TWO_POINTS UNLESS UNTIL WHEN WHILEprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : print_statement\n                 | puts_statement\n                 | input_statement\n                 | assignment_statement\n                 | data_structure\n                 | control_structure\n                 | function_definition\n                 | return_statement\n                 | class_definition\n                 | method_call\n                 | array_append\n                 | indexing\n                 | array_assignamentclass_definition : CLASS CONSTANT class_body ENDclass_body : statement_listclass_statement : function_definition\n                       | assignment_statementreturn_statement : RETURN expressionassignment_statement : LOCAL_VAR ASSIGN expression\n                            | GLOBAL_VAR ASSIGN expression\n                            | INSTANCE_VAR ASSIGN expression\n                            | CLASS_VAR ASSIGN expressionprint_statement : PRINT L_PAREN argument_list R_PAREN\n                       | PRINT L_PAREN R_PAREN \n                       | PRINT argument_list\n                       | PRINTputs_statement : PUTS L_PAREN argument_list R_PAREN\n                      | PUTS L_PAREN R_PAREN \n                      | PUTS argument_list\n                      | PUTSargument_list : expression\n                     | argument_list COMMA expressioninput_statement : LOCAL_VAR ASSIGN GETS\n                       | LOCAL_VAR ASSIGN GETS DOT CHOMPdata_structure : array_definition\n                      | hash_definitionhash_definition : LOCAL_VAR ASSIGN L_MAYUS_PAREN hash_element_list R_MAYUS_PARENhash_element_list : hash_element\n                         | hash_element_list COMMA hash_elementhash_element : STRING HASHARROW expression\n                    | LOCAL_VAR TWO_POINTS expressionlogical_operator : AND\n                        | OR\n                        | OR_OPERATORarray_definition : LOCAL_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN\n                        | LOCAL_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN\n                        | GLOBAL_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN\n                        | GLOBAL_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN\n                        | INSTANCE_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN\n                        | INSTANCE_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN\n                        | CLASS_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN\n                        | CLASS_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PARENarray_append : LOCAL_VAR APPEND expression\n                    | GLOBAL_VAR APPEND expression\n                    | INSTANCE_VAR APPEND expression\n                    | CLASS_VAR APPEND expressionelement_list : expression\n                    | element_list COMMA expressioncontrol_structure : if_statement\n                         | until_statement\n                         | unless_statement\n                         | while_statementif_statement : IF condition statement_list END\n                    | IF condition statement_list ELSE statement_list END\n                    | IF condition statement_list ELSIF condition statement_list ELSE statement_list ENDwhile_statement : WHILE condition statement_list ENDunless_statement : UNLESS condition statement_list END\n                        | UNLESS condition statement_list ELSE statement_list ENDuntil_statement : UNTIL condition statement_list ENDcondition : expression comparison_operator expression\n                 | condition logical_operator condition\n                 | NOT condition\n                 | L_PAREN condition R_PARENfunction_definition : DEF LOCAL_VAR parameter_list statement_list END\n                           | DEF LOCAL_VAR statement_list END\n                           parameter_list : L_PAREN parameter_list_inner R_PAREN\n                      | L_PAREN R_PARENparameter_list_inner : LOCAL_VAR\n                            | parameter_list_inner COMMA LOCAL_VARexpression : expression_binop\n                  | expression_not\n                  | expression_group\n                  | expression_term\n                  | indexing\n                  | method_callexpression_binop : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVIDE expression\n                  | expression MODULE expression\n                  | expression EQUALS expression\n                  | expression DIFFERENT expression\n                  | expression GREATER expression\n                  | expression LESS expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS_EQUAL expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression OR_OPERATOR expression\n                  | expression GREATER_EQUAL method_call\n                  | expression LESS_EQUAL method_call\n                  | expression GREATER method_call\n                  | expression LESS method_call\n                  | expression EQUALS method_callexpression_not : NOT expressionexpression_group : L_PAREN expression R_PARENexpression_term : INTEGER\n                  | FLOAT\n                  | STRING\n                  | LOCAL_VAR\n                  | indexing\n                  | function_callfunction_call : LOCAL_VAR L_PAREN argument_list R_PAREN\n                     | LOCAL_VAR L_PAREN R_PAREN\n                     | LOCAL_VAR argument_list\n                     | LOCAL_VARmethod_call : LOCAL_VAR DOT function_call\n                   | GLOBAL_VAR DOT function_call\n                   | INSTANCE_VAR DOT function_call\n                   | CLASS_VAR DOT function_call\n                   | CONSTANT DOT function_callindexing : LOCAL_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN\n                | GLOBAL_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN\n                | INSTANCE_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN\n                | CLASS_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN\n                | L_ULTRA_PAREN TWO_POINTS LOCAL_VAR R_ULTRA_PAREN\n                | indexing L_ULTRA_PAREN expression R_ULTRA_PAREN\n                | indexing L_ULTRA_PAREN TWO_POINTS LOCAL_VAR R_ULTRA_PARENarray_assignament : indexing ASSIGN expressioncomparison_operator : EQUALS\n                           | DIFFERENT\n                           | LESS\n                           | LESS_EQUAL\n                           | GREATER\n                           | GREATER_EQUALempty :'
    
_lr_action_items = {'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,38,42,43,44,45,46,47,48,49,51,52,53,54,55,60,77,78,80,83,87,88,89,92,94,111,114,116,117,118,121,122,123,125,127,128,130,132,133,135,137,138,140,141,145,146,148,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,239,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-29,-33,-38,-39,-62,-63,-64,-65,-3,-28,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-32,17,-21,17,17,17,17,17,-132,-27,-108,-118,-31,-36,-22,-119,-120,-56,-23,-121,-57,-24,-122,-58,-25,-123,-59,17,17,17,-124,17,-75,17,17,17,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,17,-78,-80,-17,-129,-66,17,-74,-73,-76,-72,-70,17,-69,-131,-116,-37,-48,-40,-50,-52,-54,-77,-79,17,17,17,-67,17,-71,17,17,-68,]),'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,38,42,43,44,45,46,47,48,49,51,52,53,54,55,60,77,78,80,83,87,88,89,92,94,111,114,116,117,118,121,122,123,125,127,128,130,132,133,135,137,138,140,141,145,146,148,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,239,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-29,-33,-38,-39,-62,-63,-64,-65,-3,-28,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-32,18,-21,18,18,18,18,18,-132,-27,-108,-118,-31,-36,-22,-119,-120,-56,-23,-121,-57,-24,-122,-58,-25,-123,-59,18,18,18,-124,18,-75,18,18,18,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,18,-78,-80,-17,-129,-66,18,-74,-73,-76,-72,-70,18,-69,-131,-116,-37,-48,-40,-50,-52,-54,-77,-79,18,18,18,-67,18,-71,18,18,-68,]),'LOCAL_VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,29,30,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,91,92,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,140,141,142,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,256,257,258,259,260,261,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,54,54,-38,-39,-62,-63,-64,-65,77,54,54,54,54,54,-3,54,54,54,-28,-34,-83,-84,-85,-86,-87,-88,54,-110,-111,-112,54,-115,54,-32,54,121,54,54,54,121,54,54,54,121,54,54,54,121,54,54,19,-21,54,19,121,147,19,54,54,19,19,19,168,-132,-27,54,54,54,54,54,54,179,54,179,179,179,179,54,54,54,-108,54,54,-118,-31,-36,-22,54,202,54,-120,-56,-23,54,-121,-57,-24,54,-122,-58,-25,54,-123,-59,19,19,220,19,-124,19,54,-45,-46,-47,54,-133,-134,-137,-135,-138,-136,-75,19,19,19,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,54,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,19,-78,-80,-17,-129,-66,19,54,-74,-73,-76,-72,-70,19,-69,-131,-116,-37,-48,54,54,-40,202,54,-50,-52,-54,-77,-79,255,19,19,19,-67,19,-71,19,19,-68,]),'GLOBAL_VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,30,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,63,64,65,67,68,69,71,72,73,75,76,77,78,79,80,83,85,86,87,88,89,92,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,140,141,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,56,56,-38,-39,-62,-63,-64,-65,56,56,56,56,56,-3,56,56,56,-28,-34,-83,-84,-85,-86,-87,-88,56,-110,-111,-112,56,-115,56,-32,56,56,56,56,56,56,56,56,56,56,56,56,20,-21,56,20,20,56,56,20,20,20,-132,-27,56,56,56,56,56,56,180,56,180,180,180,180,56,56,56,-108,56,56,-118,-31,-36,-22,56,56,-120,-56,-23,56,-121,-57,-24,56,-122,-58,-25,56,-123,-59,20,20,20,-124,20,56,-45,-46,-47,56,-133,-134,-137,-135,-138,-136,-75,20,20,20,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,56,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,20,-78,-80,-17,-129,-66,20,56,-74,-73,-76,-72,-70,20,-69,-131,-116,-37,-48,56,56,-40,56,-50,-52,-54,-77,-79,20,20,20,-67,20,-71,20,20,-68,]),'INSTANCE_VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,30,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,63,64,65,67,68,69,71,72,73,75,76,77,78,79,80,83,85,86,87,88,89,92,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,140,141,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,57,57,-38,-39,-62,-63,-64,-65,57,57,57,57,57,-3,57,57,57,-28,-34,-83,-84,-85,-86,-87,-88,57,-110,-111,-112,57,-115,57,-32,57,57,57,57,57,57,57,57,57,57,57,57,21,-21,57,21,21,57,57,21,21,21,-132,-27,57,57,57,57,57,57,181,57,181,181,181,181,57,57,57,-108,57,57,-118,-31,-36,-22,57,57,-120,-56,-23,57,-121,-57,-24,57,-122,-58,-25,57,-123,-59,21,21,21,-124,21,57,-45,-46,-47,57,-133,-134,-137,-135,-138,-136,-75,21,21,21,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,57,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,21,-78,-80,-17,-129,-66,21,57,-74,-73,-76,-72,-70,21,-69,-131,-116,-37,-48,57,57,-40,57,-50,-52,-54,-77,-79,21,21,21,-67,21,-71,21,21,-68,]),'CLASS_VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,30,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,63,64,65,67,68,69,71,72,73,75,76,77,78,79,80,83,85,86,87,88,89,92,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,140,141,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[22,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,58,58,-38,-39,-62,-63,-64,-65,58,58,58,58,58,-3,58,58,58,-28,-34,-83,-84,-85,-86,-87,-88,58,-110,-111,-112,58,-115,58,-32,58,58,58,58,58,58,58,58,58,58,58,58,22,-21,58,22,22,58,58,22,22,22,-132,-27,58,58,58,58,58,58,182,58,182,182,182,182,58,58,58,-108,58,58,-118,-31,-36,-22,58,58,-120,-56,-23,58,-121,-57,-24,58,-122,-58,-25,58,-123,-59,22,22,22,-124,22,58,-45,-46,-47,58,-133,-134,-137,-135,-138,-136,-75,22,22,22,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,58,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,22,-78,-80,-17,-129,-66,22,58,-74,-73,-76,-72,-70,22,-69,-131,-116,-37,-48,58,58,-40,58,-50,-52,-54,-77,-79,22,22,22,-67,22,-71,22,22,-68,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,38,42,43,44,45,46,47,48,49,51,52,53,54,55,60,77,78,80,83,87,88,89,92,94,111,114,116,117,118,121,122,123,125,127,128,130,132,133,135,137,138,140,141,145,146,148,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,239,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[29,29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-29,-33,-38,-39,-62,-63,-64,-65,-3,-28,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-32,29,-21,29,29,29,29,29,-132,-27,-108,-118,-31,-36,-22,-119,-120,-56,-23,-121,-57,-24,-122,-58,-25,-123,-59,29,29,29,-124,29,-75,29,29,29,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,29,-78,-80,-17,-129,-66,29,-74,-73,-76,-72,-70,29,-69,-131,-116,-37,-48,-40,-50,-52,-54,-77,-79,29,29,29,-67,29,-71,29,29,-68,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,38,42,43,44,45,46,47,48,49,51,52,53,54,55,60,77,78,80,83,87,88,89,92,94,111,114,116,117,118,121,122,123,125,127,128,130,132,133,135,137,138,140,141,145,146,148,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,239,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[30,30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-29,-33,-38,-39,-62,-63,-64,-65,-3,-28,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-32,30,-21,30,30,30,30,30,-132,-27,-108,-118,-31,-36,-22,-119,-120,-56,-23,-121,-57,-24,-122,-58,-25,-123,-59,30,30,30,-124,30,-75,30,30,30,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,30,-78,-80,-17,-129,-66,30,-74,-73,-76,-72,-70,30,-69,-131,-116,-37,-48,-40,-50,-52,-54,-77,-79,30,30,30,-67,30,-71,30,30,-68,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,38,42,43,44,45,46,47,48,49,51,52,53,54,55,60,77,78,80,83,87,88,89,92,94,111,114,116,117,118,121,122,123,125,127,128,130,132,133,135,137,138,140,141,145,146,148,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,239,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[31,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-29,-33,-38,-39,-62,-63,-64,-65,-3,-28,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-32,31,-21,31,31,31,31,31,-132,-27,-108,-118,-31,-36,-22,-119,-120,-56,-23,-121,-57,-24,-122,-58,-25,-123,-59,31,31,31,-124,31,-75,31,31,31,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,31,-78,-80,-17,-129,-66,31,-74,-73,-76,-72,-70,31,-69,-131,-116,-37,-48,-40,-50,-52,-54,-77,-79,31,31,31,-67,31,-71,31,31,-68,]),'CONSTANT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,60,61,63,64,65,67,68,69,71,72,73,75,76,77,78,79,80,83,85,86,87,88,89,92,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,140,141,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[32,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,32,32,-38,-39,-62,-63,-64,-65,32,80,32,32,32,32,-3,32,32,32,-28,-34,-83,-84,-85,-86,-87,-88,32,-110,-111,-112,32,-115,32,-32,32,32,32,32,32,32,32,32,32,32,32,32,32,-21,32,32,32,32,32,32,32,32,-132,-27,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-108,32,32,-118,-31,-36,-22,32,32,-120,-56,-23,32,-121,-57,-24,32,-122,-58,-25,32,-123,-59,32,32,32,-124,32,32,-45,-46,-47,32,-133,-134,-137,-135,-138,-136,-75,32,32,32,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,32,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,32,-78,-80,-17,-129,-66,32,32,-74,-73,-76,-72,-70,32,-69,-131,-116,-37,-48,32,32,-40,32,-50,-52,-54,-77,-79,32,32,32,-67,32,-71,32,32,-68,]),'L_ULTRA_PAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,69,71,72,73,75,76,77,78,79,80,83,85,86,87,88,89,92,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,121,122,123,125,126,127,128,130,131,132,133,135,136,137,138,140,141,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[33,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,39,-16,33,33,64,68,72,76,-38,-39,-62,-63,-64,-65,33,33,33,33,33,-3,33,33,33,-28,-34,-83,-84,-85,-86,39,-88,33,-110,-111,-112,112,-115,68,72,76,33,-32,119,33,33,126,33,33,131,33,33,136,33,33,33,-21,33,33,33,33,33,33,33,33,-132,-27,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-108,33,33,-118,-31,-36,-22,33,33,-120,-56,-23,33,-121,-57,-24,33,-122,-58,-25,33,-123,-59,33,33,33,-124,33,33,-45,-46,-47,33,-133,-134,-137,-135,-138,-136,-75,33,33,33,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,112,68,72,76,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,33,-78,-80,-17,-129,-66,33,33,-74,-73,-76,-72,-70,33,-69,-131,-116,-37,-48,33,33,-40,33,-50,-52,-54,-77,-79,33,33,33,-67,33,-71,33,33,-68,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,38,42,43,44,45,46,47,48,49,51,52,53,54,55,60,77,78,80,83,87,88,89,92,94,111,114,116,117,118,121,122,123,125,127,128,130,132,133,135,137,138,140,141,145,146,148,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,239,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[34,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-29,-33,-38,-39,-62,-63,-64,-65,-3,-28,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-32,34,-21,34,34,34,34,34,-132,-27,-108,-118,-31,-36,-22,-119,-120,-56,-23,-121,-57,-24,-122,-58,-25,-123,-59,34,34,34,-124,34,-75,34,34,34,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,34,-78,-80,-17,-129,-66,34,-74,-73,-76,-72,-70,34,-69,-131,-116,-37,-48,-40,-50,-52,-54,-77,-79,34,34,34,-67,34,-71,34,34,-68,]),'UNTIL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,38,42,43,44,45,46,47,48,49,51,52,53,54,55,60,77,78,80,83,87,88,89,92,94,111,114,116,117,118,121,122,123,125,127,128,130,132,133,135,137,138,140,141,145,146,148,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,239,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[35,35,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-29,-33,-38,-39,-62,-63,-64,-65,-3,-28,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-32,35,-21,35,35,35,35,35,-132,-27,-108,-118,-31,-36,-22,-119,-120,-56,-23,-121,-57,-24,-122,-58,-25,-123,-59,35,35,35,-124,35,-75,35,35,35,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,35,-78,-80,-17,-129,-66,35,-74,-73,-76,-72,-70,35,-69,-131,-116,-37,-48,-40,-50,-52,-54,-77,-79,35,35,35,-67,35,-71,35,35,-68,]),'UNLESS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,38,42,43,44,45,46,47,48,49,51,52,53,54,55,60,77,78,80,83,87,88,89,92,94,111,114,116,117,118,121,122,123,125,127,128,130,132,133,135,137,138,140,141,145,146,148,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,239,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[36,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-29,-33,-38,-39,-62,-63,-64,-65,-3,-28,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-32,36,-21,36,36,36,36,36,-132,-27,-108,-118,-31,-36,-22,-119,-120,-56,-23,-121,-57,-24,-122,-58,-25,-123,-59,36,36,36,-124,36,-75,36,36,36,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,36,-78,-80,-17,-129,-66,36,-74,-73,-76,-72,-70,36,-69,-131,-116,-37,-48,-40,-50,-52,-54,-77,-79,36,36,36,-67,36,-71,36,36,-68,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,38,42,43,44,45,46,47,48,49,51,52,53,54,55,60,77,78,80,83,87,88,89,92,94,111,114,116,117,118,121,122,123,125,127,128,130,132,133,135,137,138,140,141,145,146,148,160,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,239,242,243,244,245,246,248,249,250,256,257,258,259,260,261,],[37,37,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-29,-33,-38,-39,-62,-63,-64,-65,-3,-28,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-32,37,-21,37,37,37,37,37,-132,-27,-108,-118,-31,-36,-22,-119,-120,-56,-23,-121,-57,-24,-122,-58,-25,-123,-59,37,37,37,-124,37,-75,37,37,37,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,37,-78,-80,-17,-129,-66,37,-74,-73,-76,-72,-70,37,-69,-131,-116,-37,-48,-40,-50,-52,-54,-77,-79,37,37,37,-67,37,-71,37,37,-68,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,38,42,43,44,45,46,47,48,49,51,52,53,54,55,60,78,92,94,111,114,116,117,118,121,122,123,125,127,128,130,132,133,135,137,138,146,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,217,221,222,223,229,230,232,233,234,235,236,239,242,243,244,245,256,258,261,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-29,-33,-38,-39,-62,-63,-64,-65,-3,-28,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-32,-21,-132,-27,-108,-118,-31,-36,-22,-119,-120,-56,-23,-121,-57,-24,-122,-58,-25,-123,-59,-124,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,-78,-17,-129,-66,-72,-70,-69,-131,-116,-37,-48,-40,-50,-52,-54,-77,-67,-71,-68,]),'END':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,38,42,43,44,45,46,47,48,49,51,52,53,54,55,60,78,92,94,111,114,116,117,118,121,122,123,125,127,128,130,132,133,135,137,138,141,144,145,146,148,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,216,217,221,222,223,229,230,232,233,234,235,236,239,242,243,244,245,248,250,256,258,260,261,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-29,-33,-38,-39,-62,-63,-64,-65,-3,-28,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-32,-21,-132,-27,-108,-118,-31,-36,-22,-119,-120,-56,-23,-121,-57,-24,-122,-58,-25,-123,-59,217,221,-18,-124,223,229,230,232,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,245,-78,-17,-129,-66,-72,-70,-69,-131,-116,-37,-48,-40,-50,-52,-54,-77,256,258,-67,-71,261,-68,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,38,42,43,44,45,46,47,48,49,51,52,53,54,55,60,78,92,94,111,114,116,117,118,121,122,123,125,127,128,130,132,133,135,137,138,146,148,165,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,217,221,222,223,229,230,232,233,234,235,236,239,242,243,244,245,256,257,258,261,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-29,-33,-38,-39,-62,-63,-64,-65,-3,-28,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-32,-21,-132,-27,-108,-118,-31,-36,-22,-119,-120,-56,-23,-121,-57,-24,-122,-58,-25,-123,-59,-124,224,231,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,-78,-17,-129,-66,-72,-70,-69,-131,-116,-37,-48,-40,-50,-52,-54,-77,-67,259,-71,-68,]),'ELSIF':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,25,26,27,28,38,42,43,44,45,46,47,48,49,51,52,53,54,55,60,78,92,94,111,114,116,117,118,121,122,123,125,127,128,130,132,133,135,137,138,146,148,167,169,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,197,200,206,208,209,211,212,214,215,217,221,222,223,229,230,232,233,234,235,236,239,242,243,244,245,256,258,261,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-29,-33,-38,-39,-62,-63,-64,-65,-3,-28,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-32,-21,-132,-27,-108,-118,-31,-36,-22,-119,-120,-56,-23,-121,-57,-24,-122,-58,-25,-123,-59,-124,225,-130,-26,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,-30,-49,-125,-51,-126,-53,-127,-55,-128,-78,-17,-129,-66,-72,-70,-69,-131,-116,-37,-48,-40,-50,-52,-54,-77,-67,-71,-68,]),'ASSIGN':([15,19,20,21,22,167,206,209,212,215,222,233,],[40,61,65,69,73,-130,-125,-126,-127,-128,-129,-131,]),'L_PAREN':([17,18,30,34,35,36,37,39,40,41,50,54,59,61,63,64,65,67,68,69,71,72,73,75,76,77,79,85,86,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,121,126,131,136,149,150,151,152,153,154,155,156,157,158,159,179,225,237,238,241,],[41,59,79,86,86,86,86,79,79,79,79,113,79,79,79,79,79,79,79,79,79,79,79,79,79,142,79,86,86,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,113,79,79,79,86,-45,-46,-47,79,-133,-134,-137,-135,-138,-136,113,86,79,79,79,]),'NOT':([17,18,30,34,35,36,37,39,40,41,50,54,59,61,63,64,65,67,68,69,71,72,73,75,76,79,85,86,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,121,126,131,136,149,150,151,152,153,154,155,156,157,158,159,179,225,237,238,241,],[50,50,50,85,85,85,85,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,85,85,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,85,-45,-46,-47,50,-133,-134,-137,-135,-138,-136,50,85,50,50,50,]),'INTEGER':([17,18,30,34,35,36,37,39,40,41,50,54,59,61,63,64,65,67,68,69,71,72,73,75,76,79,85,86,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,121,126,131,136,149,150,151,152,153,154,155,156,157,158,159,179,225,237,238,241,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-45,-46,-47,51,-133,-134,-137,-135,-138,-136,51,51,51,51,51,]),'FLOAT':([17,18,30,34,35,36,37,39,40,41,50,54,59,61,63,64,65,67,68,69,71,72,73,75,76,79,85,86,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,121,126,131,136,149,150,151,152,153,154,155,156,157,158,159,179,225,237,238,241,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-45,-46,-47,52,-133,-134,-137,-135,-138,-136,52,52,52,52,52,]),'STRING':([17,18,30,34,35,36,37,39,40,41,50,54,59,61,63,64,65,67,68,69,71,72,73,75,76,79,85,86,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,120,121,126,131,136,149,150,151,152,153,154,155,156,157,158,159,179,225,237,238,240,241,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,205,53,53,53,53,53,-45,-46,-47,53,-133,-134,-137,-135,-138,-136,53,53,53,53,205,53,]),'DOT':([19,20,21,22,32,54,56,57,58,117,179,180,181,182,],[62,66,70,74,81,62,66,70,74,198,62,66,70,74,]),'APPEND':([19,20,21,22,],[63,67,71,75,]),'TWO_POINTS':([33,39,112,119,126,131,136,202,],[82,91,82,82,82,82,82,238,]),'R_PAREN':([41,43,44,45,46,47,48,49,51,52,53,54,55,59,93,95,111,113,114,115,121,122,127,132,137,142,143,146,160,161,162,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,195,196,206,209,212,215,218,220,222,226,227,228,233,234,255,],[94,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,116,169,170,-108,196,-118,197,-119,-120,-121,-122,-123,219,170,-124,-75,-108,228,170,-130,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,234,-117,-125,-126,-127,-128,246,-81,-129,-74,-73,-76,-131,-116,-82,]),'COMMA':([42,43,44,45,46,47,48,49,51,52,53,54,55,60,93,95,111,114,115,121,122,127,132,137,146,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,201,203,204,206,207,209,210,212,213,215,218,220,222,233,234,251,252,253,254,255,],[96,-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,96,96,-34,-108,96,96,-119,-120,-121,-122,-123,-124,-130,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,96,-117,237,-60,240,-41,-125,237,-126,237,-127,237,-128,247,-81,-129,-131,-116,-61,-44,-42,-43,-82,]),'PLUS':([43,44,45,46,47,48,49,51,52,53,54,55,78,84,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,161,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,227,233,234,251,252,254,],[97,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,97,97,97,97,97,97,-118,97,-119,-120,97,97,97,-121,97,97,97,-122,97,97,97,-123,97,97,97,-124,97,97,-130,-109,97,-89,-90,-91,-92,-93,97,-88,-113,97,97,-88,97,-88,97,-88,97,-88,97,97,97,-117,97,-125,-126,-127,-128,-129,97,-131,-116,97,97,97,]),'MINUS':([43,44,45,46,47,48,49,51,52,53,54,55,78,84,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,161,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,227,233,234,251,252,254,],[98,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,98,98,98,98,98,98,-118,98,-119,-120,98,98,98,-121,98,98,98,-122,98,98,98,-123,98,98,98,-124,98,98,-130,-109,98,-89,-90,-91,-92,-93,98,-88,-113,98,98,-88,98,-88,98,-88,98,-88,98,98,98,-117,98,-125,-126,-127,-128,-129,98,-131,-116,98,98,98,]),'MULTIPLY':([43,44,45,46,47,48,49,51,52,53,54,55,78,84,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,161,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,227,233,234,251,252,254,],[99,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,99,99,99,99,99,99,-118,99,-119,-120,99,99,99,-121,99,99,99,-122,99,99,99,-123,99,99,99,-124,99,99,-130,-109,99,99,99,-91,-92,-93,99,-88,-113,99,99,-88,99,-88,99,-88,99,-88,99,99,99,-117,99,-125,-126,-127,-128,-129,99,-131,-116,99,99,99,]),'DIVIDE':([43,44,45,46,47,48,49,51,52,53,54,55,78,84,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,161,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,227,233,234,251,252,254,],[100,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,100,100,100,100,100,100,-118,100,-119,-120,100,100,100,-121,100,100,100,-122,100,100,100,-123,100,100,100,-124,100,100,-130,-109,100,100,100,-91,-92,-93,100,-88,-113,100,100,-88,100,-88,100,-88,100,-88,100,100,100,-117,100,-125,-126,-127,-128,-129,100,-131,-116,100,100,100,]),'MODULE':([43,44,45,46,47,48,49,51,52,53,54,55,78,84,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,161,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,227,233,234,251,252,254,],[101,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,101,101,101,101,101,101,-118,101,-119,-120,101,101,101,-121,101,101,101,-122,101,101,101,-123,101,101,101,-124,101,101,-130,-109,101,101,101,-91,-92,-93,101,-88,-113,101,101,-88,101,-88,101,-88,101,-88,101,101,101,-117,101,-125,-126,-127,-128,-129,101,-131,-116,101,101,101,]),'EQUALS':([43,44,45,46,47,48,49,51,52,53,54,55,78,84,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,161,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,227,233,234,251,252,254,],[102,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,102,154,102,102,102,102,-118,102,-119,-120,102,102,102,-121,102,102,102,-122,102,102,102,-123,102,102,102,-124,154,154,-130,-109,102,-89,-90,-91,-92,-93,102,-88,-113,102,102,-88,102,-88,102,-88,102,-88,102,102,102,-117,102,-125,-126,-127,-128,-129,102,-131,-116,102,102,102,]),'DIFFERENT':([43,44,45,46,47,48,49,51,52,53,54,55,78,84,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,161,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,227,233,234,251,252,254,],[103,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,103,155,103,103,103,103,-118,103,-119,-120,103,103,103,-121,103,103,103,-122,103,103,103,-123,103,103,103,-124,155,155,-130,-109,103,-89,-90,-91,-92,-93,None,-88,-113,None,None,-88,None,-88,None,-88,None,-88,103,103,103,-117,103,-125,-126,-127,-128,-129,103,-131,-116,103,103,103,]),'GREATER':([43,44,45,46,47,48,49,51,52,53,54,55,78,84,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,161,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,227,233,234,251,252,254,],[104,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,104,156,104,104,104,104,-118,104,-119,-120,104,104,104,-121,104,104,104,-122,104,104,104,-123,104,104,104,-124,156,156,-130,-109,104,-89,-90,-91,-92,-93,104,-88,-113,104,104,-88,104,-88,104,-88,104,-88,104,104,104,-117,104,-125,-126,-127,-128,-129,104,-131,-116,104,104,104,]),'LESS':([43,44,45,46,47,48,49,51,52,53,54,55,78,84,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,161,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,227,233,234,251,252,254,],[105,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,105,157,105,105,105,105,-118,105,-119,-120,105,105,105,-121,105,105,105,-122,105,105,105,-123,105,105,105,-124,157,157,-130,-109,105,-89,-90,-91,-92,-93,105,-88,-113,105,105,-88,105,-88,105,-88,105,-88,105,105,105,-117,105,-125,-126,-127,-128,-129,105,-131,-116,105,105,105,]),'GREATER_EQUAL':([43,44,45,46,47,48,49,51,52,53,54,55,78,84,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,161,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,227,233,234,251,252,254,],[106,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,106,158,106,106,106,106,-118,106,-119,-120,106,106,106,-121,106,106,106,-122,106,106,106,-123,106,106,106,-124,158,158,-130,-109,106,-89,-90,-91,-92,-93,106,-88,-113,106,106,-88,106,-88,106,-88,106,-88,106,106,106,-117,106,-125,-126,-127,-128,-129,106,-131,-116,106,106,106,]),'LESS_EQUAL':([43,44,45,46,47,48,49,51,52,53,54,55,78,84,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,161,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,227,233,234,251,252,254,],[107,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,107,159,107,107,107,107,-118,107,-119,-120,107,107,107,-121,107,107,107,-122,107,107,107,-123,107,107,107,-124,159,159,-130,-109,107,-89,-90,-91,-92,-93,107,-88,-113,107,107,-88,107,-88,107,-88,107,-88,107,107,107,-117,107,-125,-126,-127,-128,-129,107,-131,-116,107,107,107,]),'AND':([43,44,45,46,47,48,49,51,52,53,54,55,78,83,84,87,88,89,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,160,161,162,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,226,227,228,233,234,249,251,252,254,],[108,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,108,150,108,150,150,150,108,108,108,108,-118,108,-119,-120,108,108,108,-121,108,108,108,-122,108,108,108,-123,108,108,108,-124,150,108,150,108,-130,-109,108,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,108,-117,108,-125,-126,-127,-128,-129,150,108,-76,-131,-116,150,108,108,108,]),'OR':([43,44,45,46,47,48,49,51,52,53,54,55,78,83,84,87,88,89,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,160,161,162,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,226,227,228,233,234,249,251,252,254,],[109,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,109,151,109,151,151,151,109,109,109,109,-118,109,-119,-120,109,109,109,-121,109,109,109,-122,109,109,109,-123,109,109,109,-124,151,109,151,109,-130,-109,109,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,109,-101,109,-117,109,-125,-126,-127,-128,-129,151,109,-76,-131,-116,151,109,109,109,]),'OR_OPERATOR':([43,44,45,46,47,48,49,51,52,53,54,55,78,83,84,87,88,89,90,92,95,111,114,118,121,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,143,146,160,161,162,163,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,201,206,209,212,215,222,226,227,228,233,234,249,251,252,254,],[110,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,110,152,110,152,152,152,110,110,110,-108,-118,110,-119,-120,110,110,110,-121,110,110,110,-122,110,110,110,-123,110,110,110,-124,-75,-108,152,110,-130,-109,110,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,110,-117,110,-125,-126,-127,-128,-129,152,110,-76,-131,-116,152,110,110,110,]),'R_ULTRA_PAREN':([43,44,45,46,47,48,49,51,52,53,54,55,90,111,114,119,121,122,124,126,127,129,131,132,134,136,137,139,146,147,167,168,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,199,201,206,207,209,210,212,213,215,222,233,234,251,],[-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,167,-108,-118,200,-119,-120,206,208,-121,209,211,-122,212,214,-123,215,-124,222,-130,233,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,236,-60,-125,242,-126,243,-127,244,-128,-129,-131,-116,-61,]),'R_MAYUS_PAREN':([43,44,45,46,47,48,49,51,52,53,54,55,111,114,121,122,127,132,137,146,167,170,171,172,173,174,175,176,177,178,179,183,184,185,186,187,188,189,190,191,192,193,194,196,203,204,206,209,212,215,222,233,234,252,253,254,],[-34,-83,-84,-85,-86,-87,-88,-110,-111,-112,-113,-115,-108,-118,-119,-120,-121,-122,-123,-124,-130,-109,-35,-89,-90,-91,-92,-93,-94,-88,-113,-95,-96,-88,-97,-88,-98,-88,-99,-88,-100,-101,-102,-117,239,-41,-125,-126,-127,-128,-129,-131,-116,-44,-42,-43,]),'GETS':([61,],[117,]),'L_MAYUS_PAREN':([61,],[120,]),'CHOMP':([198,],[235,]),'HASHARROW':([205,],[241,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,77,80,83,87,88,89,140,224,231,249,259,],[2,141,145,148,164,165,166,216,248,250,257,260,]),'statement':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[3,38,3,3,3,3,3,3,3,38,38,38,38,38,38,38,3,3,38,3,38,38,3,38,]),'print_statement':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'puts_statement':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'input_statement':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'assignment_statement':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'data_structure':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'control_structure':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'function_definition':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'return_statement':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'class_definition':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'method_call':([0,2,17,18,30,34,35,36,37,39,40,41,50,54,59,61,63,64,65,67,68,69,71,72,73,75,76,77,79,80,83,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,121,126,131,136,140,141,145,148,149,153,154,155,156,157,158,159,164,165,166,179,216,224,225,231,237,238,241,248,249,250,257,259,260,],[13,13,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,13,49,13,13,49,49,13,13,13,49,49,49,49,49,49,178,49,185,187,189,191,49,49,49,49,49,49,49,49,49,49,13,13,13,13,49,49,178,49,185,187,189,191,13,13,13,49,13,13,49,13,49,49,49,13,13,13,13,13,13,]),'array_append':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'indexing':([0,2,17,18,30,34,35,36,37,39,40,41,50,54,59,61,63,64,65,67,68,69,71,72,73,75,76,77,79,80,83,85,86,87,88,89,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,121,126,131,136,140,141,145,148,149,153,154,155,156,157,158,159,164,165,166,179,216,224,225,231,237,238,241,248,249,250,257,259,260,],[15,15,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,15,48,15,15,48,48,15,15,15,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,15,15,15,15,48,48,48,48,48,48,48,48,15,15,15,48,15,15,48,15,48,48,48,15,15,15,15,15,15,]),'array_assignament':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'array_definition':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'hash_definition':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'if_statement':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'until_statement':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'unless_statement':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'while_statement':([0,2,77,80,83,87,88,89,140,141,145,148,164,165,166,216,224,231,248,249,250,257,259,260,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'argument_list':([17,18,41,54,59,113,121,179,],[42,60,93,114,115,195,114,114,]),'expression':([17,18,30,34,35,36,37,39,40,41,50,54,59,61,63,64,65,67,68,69,71,72,73,75,76,79,85,86,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,121,126,131,136,149,153,154,155,156,157,158,159,179,225,237,238,241,],[43,43,78,84,84,84,84,90,92,95,111,43,95,118,123,124,125,128,129,130,133,134,135,138,139,143,161,163,171,172,173,174,175,176,177,183,184,186,188,190,192,193,194,124,95,201,43,201,201,201,84,227,177,183,184,186,188,190,43,84,251,252,254,]),'expression_binop':([17,18,30,34,35,36,37,39,40,41,50,54,59,61,63,64,65,67,68,69,71,72,73,75,76,79,85,86,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,121,126,131,136,149,153,154,155,156,157,158,159,179,225,237,238,241,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'expression_not':([17,18,30,34,35,36,37,39,40,41,50,54,59,61,63,64,65,67,68,69,71,72,73,75,76,79,85,86,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,121,126,131,136,149,153,154,155,156,157,158,159,179,225,237,238,241,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'expression_group':([17,18,30,34,35,36,37,39,40,41,50,54,59,61,63,64,65,67,68,69,71,72,73,75,76,79,85,86,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,121,126,131,136,149,153,154,155,156,157,158,159,179,225,237,238,241,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'expression_term':([17,18,30,34,35,36,37,39,40,41,50,54,59,61,63,64,65,67,68,69,71,72,73,75,76,79,85,86,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,121,126,131,136,149,153,154,155,156,157,158,159,179,225,237,238,241,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'function_call':([17,18,30,34,35,36,37,39,40,41,50,54,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,81,85,86,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,119,121,126,131,136,149,153,154,155,156,157,158,159,179,225,237,238,241,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,122,55,55,55,127,55,55,55,132,55,55,55,137,55,55,55,146,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'condition':([34,35,36,37,85,86,149,225,],[83,87,88,89,160,162,226,249,]),'parameter_list':([77,],[140,]),'class_body':([80,],[144,]),'logical_operator':([83,87,88,89,160,162,226,249,],[149,149,149,149,149,149,149,149,]),'comparison_operator':([84,161,163,],[153,153,153,]),'element_list':([119,126,131,136,],[199,207,210,213,]),'hash_element_list':([120,],[203,]),'hash_element':([120,240,],[204,253,]),'parameter_list_inner':([142,],[218,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','analizadorSintactico.py',16),
  ('statement_list -> statement','statement_list',1,'p_statement_list','analizadorSintactico.py',21),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','analizadorSintactico.py',22),
  ('statement -> print_statement','statement',1,'p_statement','analizadorSintactico.py',30),
  ('statement -> puts_statement','statement',1,'p_statement','analizadorSintactico.py',31),
  ('statement -> input_statement','statement',1,'p_statement','analizadorSintactico.py',32),
  ('statement -> assignment_statement','statement',1,'p_statement','analizadorSintactico.py',33),
  ('statement -> data_structure','statement',1,'p_statement','analizadorSintactico.py',34),
  ('statement -> control_structure','statement',1,'p_statement','analizadorSintactico.py',35),
  ('statement -> function_definition','statement',1,'p_statement','analizadorSintactico.py',36),
  ('statement -> return_statement','statement',1,'p_statement','analizadorSintactico.py',37),
  ('statement -> class_definition','statement',1,'p_statement','analizadorSintactico.py',38),
  ('statement -> method_call','statement',1,'p_statement','analizadorSintactico.py',39),
  ('statement -> array_append','statement',1,'p_statement','analizadorSintactico.py',40),
  ('statement -> indexing','statement',1,'p_statement','analizadorSintactico.py',41),
  ('statement -> array_assignament','statement',1,'p_statement','analizadorSintactico.py',42),
  ('class_definition -> CLASS CONSTANT class_body END','class_definition',4,'p_class_definition','analizadorSintactico.py',47),
  ('class_body -> statement_list','class_body',1,'p_class_body','analizadorSintactico.py',52),
  ('class_statement -> function_definition','class_statement',1,'p_class_statement','analizadorSintactico.py',57),
  ('class_statement -> assignment_statement','class_statement',1,'p_class_statement','analizadorSintactico.py',58),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','analizadorSintactico.py',64),
  ('assignment_statement -> LOCAL_VAR ASSIGN expression','assignment_statement',3,'p_assignment_statement','analizadorSintactico.py',69),
  ('assignment_statement -> GLOBAL_VAR ASSIGN expression','assignment_statement',3,'p_assignment_statement','analizadorSintactico.py',70),
  ('assignment_statement -> INSTANCE_VAR ASSIGN expression','assignment_statement',3,'p_assignment_statement','analizadorSintactico.py',71),
  ('assignment_statement -> CLASS_VAR ASSIGN expression','assignment_statement',3,'p_assignment_statement','analizadorSintactico.py',72),
  ('print_statement -> PRINT L_PAREN argument_list R_PAREN','print_statement',4,'p_print_statement','analizadorSintactico.py',77),
  ('print_statement -> PRINT L_PAREN R_PAREN','print_statement',3,'p_print_statement','analizadorSintactico.py',78),
  ('print_statement -> PRINT argument_list','print_statement',2,'p_print_statement','analizadorSintactico.py',79),
  ('print_statement -> PRINT','print_statement',1,'p_print_statement','analizadorSintactico.py',80),
  ('puts_statement -> PUTS L_PAREN argument_list R_PAREN','puts_statement',4,'p_puts_statement','analizadorSintactico.py',92),
  ('puts_statement -> PUTS L_PAREN R_PAREN','puts_statement',3,'p_puts_statement','analizadorSintactico.py',93),
  ('puts_statement -> PUTS argument_list','puts_statement',2,'p_puts_statement','analizadorSintactico.py',94),
  ('puts_statement -> PUTS','puts_statement',1,'p_puts_statement','analizadorSintactico.py',95),
  ('argument_list -> expression','argument_list',1,'p_argument_list','analizadorSintactico.py',107),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','analizadorSintactico.py',108),
  ('input_statement -> LOCAL_VAR ASSIGN GETS','input_statement',3,'p_input_statement','analizadorSintactico.py',116),
  ('input_statement -> LOCAL_VAR ASSIGN GETS DOT CHOMP','input_statement',5,'p_input_statement','analizadorSintactico.py',117),
  ('data_structure -> array_definition','data_structure',1,'p_data_structure','analizadorSintactico.py',125),
  ('data_structure -> hash_definition','data_structure',1,'p_data_structure','analizadorSintactico.py',126),
  ('hash_definition -> LOCAL_VAR ASSIGN L_MAYUS_PAREN hash_element_list R_MAYUS_PAREN','hash_definition',5,'p_hash_definition','analizadorSintactico.py',131),
  ('hash_element_list -> hash_element','hash_element_list',1,'p_hash_element_list','analizadorSintactico.py',136),
  ('hash_element_list -> hash_element_list COMMA hash_element','hash_element_list',3,'p_hash_element_list','analizadorSintactico.py',137),
  ('hash_element -> STRING HASHARROW expression','hash_element',3,'p_hash_element','analizadorSintactico.py',145),
  ('hash_element -> LOCAL_VAR TWO_POINTS expression','hash_element',3,'p_hash_element','analizadorSintactico.py',146),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','analizadorSintactico.py',151),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','analizadorSintactico.py',152),
  ('logical_operator -> OR_OPERATOR','logical_operator',1,'p_logical_operator','analizadorSintactico.py',153),
  ('array_definition -> LOCAL_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN','array_definition',5,'p_array_definition','analizadorSintactico.py',158),
  ('array_definition -> LOCAL_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN','array_definition',4,'p_array_definition','analizadorSintactico.py',159),
  ('array_definition -> GLOBAL_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN','array_definition',5,'p_array_definition','analizadorSintactico.py',160),
  ('array_definition -> GLOBAL_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN','array_definition',4,'p_array_definition','analizadorSintactico.py',161),
  ('array_definition -> INSTANCE_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN','array_definition',5,'p_array_definition','analizadorSintactico.py',162),
  ('array_definition -> INSTANCE_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN','array_definition',4,'p_array_definition','analizadorSintactico.py',163),
  ('array_definition -> CLASS_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN','array_definition',5,'p_array_definition','analizadorSintactico.py',164),
  ('array_definition -> CLASS_VAR ASSIGN L_ULTRA_PAREN R_ULTRA_PAREN','array_definition',4,'p_array_definition','analizadorSintactico.py',165),
  ('array_append -> LOCAL_VAR APPEND expression','array_append',3,'p_array_append','analizadorSintactico.py',169),
  ('array_append -> GLOBAL_VAR APPEND expression','array_append',3,'p_array_append','analizadorSintactico.py',170),
  ('array_append -> INSTANCE_VAR APPEND expression','array_append',3,'p_array_append','analizadorSintactico.py',171),
  ('array_append -> CLASS_VAR APPEND expression','array_append',3,'p_array_append','analizadorSintactico.py',172),
  ('element_list -> expression','element_list',1,'p_element_list','analizadorSintactico.py',176),
  ('element_list -> element_list COMMA expression','element_list',3,'p_element_list','analizadorSintactico.py',177),
  ('control_structure -> if_statement','control_structure',1,'p_control_structure','analizadorSintactico.py',185),
  ('control_structure -> until_statement','control_structure',1,'p_control_structure','analizadorSintactico.py',186),
  ('control_structure -> unless_statement','control_structure',1,'p_control_structure','analizadorSintactico.py',187),
  ('control_structure -> while_statement','control_structure',1,'p_control_structure','analizadorSintactico.py',188),
  ('if_statement -> IF condition statement_list END','if_statement',4,'p_if_statement','analizadorSintactico.py',193),
  ('if_statement -> IF condition statement_list ELSE statement_list END','if_statement',6,'p_if_statement','analizadorSintactico.py',194),
  ('if_statement -> IF condition statement_list ELSIF condition statement_list ELSE statement_list END','if_statement',9,'p_if_statement','analizadorSintactico.py',195),
  ('while_statement -> WHILE condition statement_list END','while_statement',4,'p_while_statement','analizadorSintactico.py',203),
  ('unless_statement -> UNLESS condition statement_list END','unless_statement',4,'p_unless_statement','analizadorSintactico.py',208),
  ('unless_statement -> UNLESS condition statement_list ELSE statement_list END','unless_statement',6,'p_unless_statement','analizadorSintactico.py',209),
  ('until_statement -> UNTIL condition statement_list END','until_statement',4,'p_until_statement','analizadorSintactico.py',217),
  ('condition -> expression comparison_operator expression','condition',3,'p_condition','analizadorSintactico.py',222),
  ('condition -> condition logical_operator condition','condition',3,'p_condition','analizadorSintactico.py',223),
  ('condition -> NOT condition','condition',2,'p_condition','analizadorSintactico.py',224),
  ('condition -> L_PAREN condition R_PAREN','condition',3,'p_condition','analizadorSintactico.py',225),
  ('function_definition -> DEF LOCAL_VAR parameter_list statement_list END','function_definition',5,'p_function_definition','analizadorSintactico.py',237),
  ('function_definition -> DEF LOCAL_VAR statement_list END','function_definition',4,'p_function_definition','analizadorSintactico.py',238),
  ('parameter_list -> L_PAREN parameter_list_inner R_PAREN','parameter_list',3,'p_parameter_list','analizadorSintactico.py',247),
  ('parameter_list -> L_PAREN R_PAREN','parameter_list',2,'p_parameter_list','analizadorSintactico.py',248),
  ('parameter_list_inner -> LOCAL_VAR','parameter_list_inner',1,'p_parameter_list_inner','analizadorSintactico.py',256),
  ('parameter_list_inner -> parameter_list_inner COMMA LOCAL_VAR','parameter_list_inner',3,'p_parameter_list_inner','analizadorSintactico.py',257),
  ('expression -> expression_binop','expression',1,'p_expression','analizadorSintactico.py',265),
  ('expression -> expression_not','expression',1,'p_expression','analizadorSintactico.py',266),
  ('expression -> expression_group','expression',1,'p_expression','analizadorSintactico.py',267),
  ('expression -> expression_term','expression',1,'p_expression','analizadorSintactico.py',268),
  ('expression -> indexing','expression',1,'p_expression','analizadorSintactico.py',269),
  ('expression -> method_call','expression',1,'p_expression','analizadorSintactico.py',270),
  ('expression_binop -> expression PLUS expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',275),
  ('expression_binop -> expression MINUS expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',276),
  ('expression_binop -> expression MULTIPLY expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',277),
  ('expression_binop -> expression DIVIDE expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',278),
  ('expression_binop -> expression MODULE expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',279),
  ('expression_binop -> expression EQUALS expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',280),
  ('expression_binop -> expression DIFFERENT expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',281),
  ('expression_binop -> expression GREATER expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',282),
  ('expression_binop -> expression LESS expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',283),
  ('expression_binop -> expression GREATER_EQUAL expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',284),
  ('expression_binop -> expression LESS_EQUAL expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',285),
  ('expression_binop -> expression AND expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',286),
  ('expression_binop -> expression OR expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',287),
  ('expression_binop -> expression OR_OPERATOR expression','expression_binop',3,'p_expression_binop','analizadorSintactico.py',288),
  ('expression_binop -> expression GREATER_EQUAL method_call','expression_binop',3,'p_expression_binop','analizadorSintactico.py',289),
  ('expression_binop -> expression LESS_EQUAL method_call','expression_binop',3,'p_expression_binop','analizadorSintactico.py',290),
  ('expression_binop -> expression GREATER method_call','expression_binop',3,'p_expression_binop','analizadorSintactico.py',291),
  ('expression_binop -> expression LESS method_call','expression_binop',3,'p_expression_binop','analizadorSintactico.py',292),
  ('expression_binop -> expression EQUALS method_call','expression_binop',3,'p_expression_binop','analizadorSintactico.py',293),
  ('expression_not -> NOT expression','expression_not',2,'p_expression_not','analizadorSintactico.py',298),
  ('expression_group -> L_PAREN expression R_PAREN','expression_group',3,'p_expression_group','analizadorSintactico.py',302),
  ('expression_term -> INTEGER','expression_term',1,'p_expression_term','analizadorSintactico.py',306),
  ('expression_term -> FLOAT','expression_term',1,'p_expression_term','analizadorSintactico.py',307),
  ('expression_term -> STRING','expression_term',1,'p_expression_term','analizadorSintactico.py',308),
  ('expression_term -> LOCAL_VAR','expression_term',1,'p_expression_term','analizadorSintactico.py',309),
  ('expression_term -> indexing','expression_term',1,'p_expression_term','analizadorSintactico.py',310),
  ('expression_term -> function_call','expression_term',1,'p_expression_term','analizadorSintactico.py',311),
  ('function_call -> LOCAL_VAR L_PAREN argument_list R_PAREN','function_call',4,'p_function_call','analizadorSintactico.py',317),
  ('function_call -> LOCAL_VAR L_PAREN R_PAREN','function_call',3,'p_function_call','analizadorSintactico.py',318),
  ('function_call -> LOCAL_VAR argument_list','function_call',2,'p_function_call','analizadorSintactico.py',319),
  ('function_call -> LOCAL_VAR','function_call',1,'p_function_call','analizadorSintactico.py',320),
  ('method_call -> LOCAL_VAR DOT function_call','method_call',3,'p_method_call','analizadorSintactico.py',331),
  ('method_call -> GLOBAL_VAR DOT function_call','method_call',3,'p_method_call','analizadorSintactico.py',332),
  ('method_call -> INSTANCE_VAR DOT function_call','method_call',3,'p_method_call','analizadorSintactico.py',333),
  ('method_call -> CLASS_VAR DOT function_call','method_call',3,'p_method_call','analizadorSintactico.py',334),
  ('method_call -> CONSTANT DOT function_call','method_call',3,'p_method_call','analizadorSintactico.py',335),
  ('indexing -> LOCAL_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN','indexing',4,'p_indexing','analizadorSintactico.py',340),
  ('indexing -> GLOBAL_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN','indexing',4,'p_indexing','analizadorSintactico.py',341),
  ('indexing -> INSTANCE_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN','indexing',4,'p_indexing','analizadorSintactico.py',342),
  ('indexing -> CLASS_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN','indexing',4,'p_indexing','analizadorSintactico.py',343),
  ('indexing -> L_ULTRA_PAREN TWO_POINTS LOCAL_VAR R_ULTRA_PAREN','indexing',4,'p_indexing','analizadorSintactico.py',344),
  ('indexing -> indexing L_ULTRA_PAREN expression R_ULTRA_PAREN','indexing',4,'p_indexing','analizadorSintactico.py',345),
  ('indexing -> indexing L_ULTRA_PAREN TWO_POINTS LOCAL_VAR R_ULTRA_PAREN','indexing',5,'p_indexing','analizadorSintactico.py',346),
  ('array_assignament -> indexing ASSIGN expression','array_assignament',3,'p_array_assignament','analizadorSintactico.py',357),
  ('comparison_operator -> EQUALS','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',362),
  ('comparison_operator -> DIFFERENT','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',363),
  ('comparison_operator -> LESS','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',364),
  ('comparison_operator -> LESS_EQUAL','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',365),
  ('comparison_operator -> GREATER','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',366),
  ('comparison_operator -> GREATER_EQUAL','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',367),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',372),
]
