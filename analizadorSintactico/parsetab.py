
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BEGIN CHOMP CLASS CLASS_VAR COMMA CONSTANT DEF DIFFERENT DIVIDE DOT ELSE ELSIF END EQUALS FLOAT GETS GLOBAL_VAR GREATER GREATER_EQUAL HASHARROW IF INSTANCE_VAR INTEGER LESS LESS_EQUAL LOCAL_VAR L_MAYUS_PAREN L_PAREN L_ULTRA_PAREN MINUS MODULE MULTIPLY NIL PLUS PRINT PUTS R_MAYUS_PAREN R_PAREN R_ULTRA_PAREN STRING THEN TWO_POINTS UNLESS UNTIL WHEN WHILEprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : print_statement\n                 | puts_statement\n                 | input_statement\n                 | assignment_statement\n                 | data_structure\n                 | control_structure\n                 | function_definitionassignment_statement : LOCAL_VAR ASSIGN expressionprint_statement : PRINT L_PAREN argument_list R_PAREN\n                       | PRINT L_PAREN R_PAREN \n                       | PRINT argument_list\n                       | PRINTputs_statement : PUTS L_PAREN argument_list R_PAREN\n                     | PUTS L_PAREN R_PAREN \n                     | PUTS argument_list\n                     | PUTSargument_list : expression\n                     | argument_list COMMA expressioninput_statement : LOCAL_VAR ASSIGN GETS\n                        | LOCAL_VAR ASSIGN GETS DOT CHOMPdata_structure : array_definitionarray_definition : LOCAL_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PARENelement_list : expression\n                    | element_list COMMA expressioncontrol_structure : if_statement\n                         | until_statement\n                         | unless_statementif_statement : IF condition statement_list END\n                    | IF condition statement_list ELSE statement_list ENDunless_statement : UNLESS condition statement_list END\n                        | UNLESS condition statement_list ELSE statement_list ENDuntil_statement : UNTIL condition statement_list ENDcondition : expression comparison_operator expressionfunction_definition : DEF LOCAL_VAR L_PAREN parameter_list R_PAREN statement_list ENDparameter_list : LOCAL_VAR\n                      | parameter_list COMMA LOCAL_VAR\n                      | emptyexpression : INTEGER\n                  | FLOAT\n                  | STRING\n                  | LOCAL_VAR\n                  | array_access\n                  | expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVIDE expression\n                  | expression MODULE expression\n                  | expression comparison_operator expressionarray_access : LOCAL_VAR L_ULTRA_PAREN expression R_ULTRA_PARENcomparison_operator : EQUALS\n                           | DIFFERENT\n                           | LESS\n                           | LESS_EQUAL\n                           | GREATER\n                           | GREATER_EQUALempty :'
    
_lr_action_items = {'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,22,24,25,26,27,28,29,30,32,35,37,38,40,56,57,58,61,63,64,65,66,67,68,69,70,71,72,74,81,82,83,84,85,86,87,88,89,91,93,94,96,98,99,100,],[11,11,-2,-4,-5,-6,-7,-8,-9,-10,-15,-19,-24,-28,-29,-30,-3,-14,-20,-41,-42,-43,-44,-45,-18,11,11,11,-13,-17,-22,-11,11,11,11,-12,-21,-46,-47,-48,-49,-50,-51,-16,-31,11,-36,-35,-33,11,-52,-23,-25,11,11,11,11,-32,-34,-37,]),'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,22,24,25,26,27,28,29,30,32,35,37,38,40,56,57,58,61,63,64,65,66,67,68,69,70,71,72,74,81,82,83,84,85,86,87,88,89,91,93,94,96,98,99,100,],[12,12,-2,-4,-5,-6,-7,-8,-9,-10,-15,-19,-24,-28,-29,-30,-3,-14,-20,-41,-42,-43,-44,-45,-18,12,12,12,-13,-17,-22,-11,12,12,12,-12,-21,-46,-47,-48,-49,-50,-51,-16,-31,12,-36,-35,-33,12,-52,-23,-25,12,12,12,12,-32,-34,-37,]),'LOCAL_VAR':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,],[13,13,-2,-4,-5,-6,-7,-8,-9,-10,29,29,-24,-28,-29,-30,34,29,29,29,-3,29,-14,-20,-41,-42,-43,-44,-45,29,-18,29,13,13,13,-13,29,29,29,29,29,29,29,-53,-54,-55,-56,-57,-58,29,-17,-22,-11,29,78,13,29,13,13,-12,-21,-46,-47,-48,-49,-50,-51,-16,-31,13,-36,-35,-33,13,-52,-23,-25,29,13,97,13,13,13,-32,-34,-37,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,22,24,25,26,27,28,29,30,32,35,37,38,40,56,57,58,61,63,64,65,66,67,68,69,70,71,72,74,81,82,83,84,85,86,87,88,89,91,93,94,96,98,99,100,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-15,-19,-24,-28,-29,-30,-3,-14,-20,-41,-42,-43,-44,-45,-18,18,18,18,-13,-17,-22,-11,18,18,18,-12,-21,-46,-47,-48,-49,-50,-51,-16,-31,18,-36,-35,-33,18,-52,-23,-25,18,18,18,18,-32,-34,-37,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,22,24,25,26,27,28,29,30,32,35,37,38,40,56,57,58,61,63,64,65,66,67,68,69,70,71,72,74,81,82,83,84,85,86,87,88,89,91,93,94,96,98,99,100,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-15,-19,-24,-28,-29,-30,-3,-14,-20,-41,-42,-43,-44,-45,-18,19,19,19,-13,-17,-22,-11,19,19,19,-12,-21,-46,-47,-48,-49,-50,-51,-16,-31,19,-36,-35,-33,19,-52,-23,-25,19,19,19,19,-32,-34,-37,]),'UNTIL':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,22,24,25,26,27,28,29,30,32,35,37,38,40,56,57,58,61,63,64,65,66,67,68,69,70,71,72,74,81,82,83,84,85,86,87,88,89,91,93,94,96,98,99,100,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-15,-19,-24,-28,-29,-30,-3,-14,-20,-41,-42,-43,-44,-45,-18,20,20,20,-13,-17,-22,-11,20,20,20,-12,-21,-46,-47,-48,-49,-50,-51,-16,-31,20,-36,-35,-33,20,-52,-23,-25,20,20,20,20,-32,-34,-37,]),'UNLESS':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,22,24,25,26,27,28,29,30,32,35,37,38,40,56,57,58,61,63,64,65,66,67,68,69,70,71,72,74,81,82,83,84,85,86,87,88,89,91,93,94,96,98,99,100,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-15,-19,-24,-28,-29,-30,-3,-14,-20,-41,-42,-43,-44,-45,-18,21,21,21,-13,-17,-22,-11,21,21,21,-12,-21,-46,-47,-48,-49,-50,-51,-16,-31,21,-36,-35,-33,21,-52,-23,-25,21,21,21,21,-32,-34,-37,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,22,24,25,26,27,28,29,30,32,40,56,57,58,65,66,67,68,69,70,71,72,74,81,84,85,87,88,89,98,99,100,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-15,-19,-24,-28,-29,-30,-3,-14,-20,-41,-42,-43,-44,-45,-18,-13,-17,-22,-11,-12,-21,-46,-47,-48,-49,-50,-51,-16,-31,-35,-33,-52,-23,-25,-32,-34,-37,]),'END':([3,4,5,6,7,8,9,10,11,12,14,15,16,17,22,24,25,26,27,28,29,30,32,40,56,57,58,61,63,64,65,66,67,68,69,70,71,72,74,81,84,85,87,88,89,93,94,96,98,99,100,],[-2,-4,-5,-6,-7,-8,-9,-10,-15,-19,-24,-28,-29,-30,-3,-14,-20,-41,-42,-43,-44,-45,-18,-13,-17,-22,-11,81,84,85,-12,-21,-46,-47,-48,-49,-50,-51,-16,-31,-35,-33,-52,-23,-25,98,99,100,-32,-34,-37,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,14,15,16,17,22,24,25,26,27,28,29,30,32,40,56,57,58,61,64,65,66,67,68,69,70,71,72,74,81,84,85,87,88,89,98,99,100,],[-2,-4,-5,-6,-7,-8,-9,-10,-15,-19,-24,-28,-29,-30,-3,-14,-20,-41,-42,-43,-44,-45,-18,-13,-17,-22,-11,82,86,-12,-21,-46,-47,-48,-49,-50,-51,-16,-31,-35,-33,-52,-23,-25,-32,-34,-37,]),'L_PAREN':([11,12,34,],[23,31,60,]),'INTEGER':([11,12,19,20,21,23,31,33,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,62,90,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-53,-54,-55,-56,-57,-58,26,26,26,26,]),'FLOAT':([11,12,19,20,21,23,31,33,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,62,90,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-53,-54,-55,-56,-57,-58,27,27,27,27,]),'STRING':([11,12,19,20,21,23,31,33,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,62,90,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-53,-54,-55,-56,-57,-58,28,28,28,28,]),'ASSIGN':([13,],[33,]),'R_PAREN':([23,25,26,27,28,29,30,31,39,55,60,66,67,68,69,70,71,72,78,79,80,87,97,],[40,-20,-41,-42,-43,-44,-45,56,65,74,-59,-21,-46,-47,-48,-49,-50,-51,-38,91,-40,-52,-39,]),'COMMA':([24,25,26,27,28,29,30,32,39,55,60,66,67,68,69,70,71,72,76,77,78,79,80,87,95,97,],[41,-20,-41,-42,-43,-44,-45,41,41,41,-59,-21,-46,-47,-48,-49,-50,-51,90,-26,-38,92,-40,-52,-27,-39,]),'PLUS':([25,26,27,28,29,30,36,58,66,67,68,69,70,71,72,73,77,83,87,95,],[42,-41,-42,-43,-44,-45,42,42,42,42,42,42,42,42,42,42,42,42,-52,42,]),'MINUS':([25,26,27,28,29,30,36,58,66,67,68,69,70,71,72,73,77,83,87,95,],[43,-41,-42,-43,-44,-45,43,43,43,43,43,43,43,43,43,43,43,43,-52,43,]),'MULTIPLY':([25,26,27,28,29,30,36,58,66,67,68,69,70,71,72,73,77,83,87,95,],[44,-41,-42,-43,-44,-45,44,44,44,44,44,44,44,44,44,44,44,44,-52,44,]),'DIVIDE':([25,26,27,28,29,30,36,58,66,67,68,69,70,71,72,73,77,83,87,95,],[45,-41,-42,-43,-44,-45,45,45,45,45,45,45,45,45,45,45,45,45,-52,45,]),'MODULE':([25,26,27,28,29,30,36,58,66,67,68,69,70,71,72,73,77,83,87,95,],[46,-41,-42,-43,-44,-45,46,46,46,46,46,46,46,46,46,46,46,46,-52,46,]),'EQUALS':([25,26,27,28,29,30,36,58,66,67,68,69,70,71,72,73,77,83,87,95,],[48,-41,-42,-43,-44,-45,48,48,48,48,48,48,48,48,48,48,48,48,-52,48,]),'DIFFERENT':([25,26,27,28,29,30,36,58,66,67,68,69,70,71,72,73,77,83,87,95,],[49,-41,-42,-43,-44,-45,49,49,49,49,49,49,49,49,49,49,49,49,-52,49,]),'LESS':([25,26,27,28,29,30,36,58,66,67,68,69,70,71,72,73,77,83,87,95,],[50,-41,-42,-43,-44,-45,50,50,50,50,50,50,50,50,50,50,50,50,-52,50,]),'LESS_EQUAL':([25,26,27,28,29,30,36,58,66,67,68,69,70,71,72,73,77,83,87,95,],[51,-41,-42,-43,-44,-45,51,51,51,51,51,51,51,51,51,51,51,51,-52,51,]),'GREATER':([25,26,27,28,29,30,36,58,66,67,68,69,70,71,72,73,77,83,87,95,],[52,-41,-42,-43,-44,-45,52,52,52,52,52,52,52,52,52,52,52,52,-52,52,]),'GREATER_EQUAL':([25,26,27,28,29,30,36,58,66,67,68,69,70,71,72,73,77,83,87,95,],[53,-41,-42,-43,-44,-45,53,53,53,53,53,53,53,53,53,53,53,53,-52,53,]),'R_ULTRA_PAREN':([26,27,28,29,30,67,68,69,70,71,72,73,76,77,87,95,],[-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,87,89,-26,-52,-27,]),'L_ULTRA_PAREN':([29,33,],[54,59,]),'GETS':([33,],[57,]),'DOT':([57,],[75,]),'CHOMP':([75,],[88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,35,37,38,82,86,91,],[2,61,63,64,93,94,96,]),'statement':([0,2,35,37,38,61,63,64,82,86,91,93,94,96,],[3,22,3,3,3,22,22,22,3,3,3,22,22,22,]),'print_statement':([0,2,35,37,38,61,63,64,82,86,91,93,94,96,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'puts_statement':([0,2,35,37,38,61,63,64,82,86,91,93,94,96,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'input_statement':([0,2,35,37,38,61,63,64,82,86,91,93,94,96,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'assignment_statement':([0,2,35,37,38,61,63,64,82,86,91,93,94,96,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'data_structure':([0,2,35,37,38,61,63,64,82,86,91,93,94,96,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'control_structure':([0,2,35,37,38,61,63,64,82,86,91,93,94,96,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'function_definition':([0,2,35,37,38,61,63,64,82,86,91,93,94,96,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'array_definition':([0,2,35,37,38,61,63,64,82,86,91,93,94,96,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'if_statement':([0,2,35,37,38,61,63,64,82,86,91,93,94,96,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'until_statement':([0,2,35,37,38,61,63,64,82,86,91,93,94,96,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'unless_statement':([0,2,35,37,38,61,63,64,82,86,91,93,94,96,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'argument_list':([11,12,23,31,],[24,32,39,55,]),'expression':([11,12,19,20,21,23,31,33,41,42,43,44,45,46,47,54,59,62,90,],[25,25,36,36,36,25,25,58,66,67,68,69,70,71,72,73,77,83,95,]),'array_access':([11,12,19,20,21,23,31,33,41,42,43,44,45,46,47,54,59,62,90,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'condition':([19,20,21,],[35,37,38,]),'comparison_operator':([25,36,58,66,67,68,69,70,71,72,73,77,83,95,],[47,62,47,47,47,47,47,47,47,47,47,47,47,47,]),'element_list':([59,],[76,]),'parameter_list':([60,],[79,]),'empty':([60,],[80,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','analizadorSintactico.py',7),
  ('statement_list -> statement','statement_list',1,'p_statement_list','analizadorSintactico.py',12),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','analizadorSintactico.py',13),
  ('statement -> print_statement','statement',1,'p_statement','analizadorSintactico.py',18),
  ('statement -> puts_statement','statement',1,'p_statement','analizadorSintactico.py',19),
  ('statement -> input_statement','statement',1,'p_statement','analizadorSintactico.py',20),
  ('statement -> assignment_statement','statement',1,'p_statement','analizadorSintactico.py',21),
  ('statement -> data_structure','statement',1,'p_statement','analizadorSintactico.py',22),
  ('statement -> control_structure','statement',1,'p_statement','analizadorSintactico.py',23),
  ('statement -> function_definition','statement',1,'p_statement','analizadorSintactico.py',24),
  ('assignment_statement -> LOCAL_VAR ASSIGN expression','assignment_statement',3,'p_assignment_statement','analizadorSintactico.py',29),
  ('print_statement -> PRINT L_PAREN argument_list R_PAREN','print_statement',4,'p_print_statement','analizadorSintactico.py',34),
  ('print_statement -> PRINT L_PAREN R_PAREN','print_statement',3,'p_print_statement','analizadorSintactico.py',35),
  ('print_statement -> PRINT argument_list','print_statement',2,'p_print_statement','analizadorSintactico.py',36),
  ('print_statement -> PRINT','print_statement',1,'p_print_statement','analizadorSintactico.py',37),
  ('puts_statement -> PUTS L_PAREN argument_list R_PAREN','puts_statement',4,'p_puts_statement','analizadorSintactico.py',42),
  ('puts_statement -> PUTS L_PAREN R_PAREN','puts_statement',3,'p_puts_statement','analizadorSintactico.py',43),
  ('puts_statement -> PUTS argument_list','puts_statement',2,'p_puts_statement','analizadorSintactico.py',44),
  ('puts_statement -> PUTS','puts_statement',1,'p_puts_statement','analizadorSintactico.py',45),
  ('argument_list -> expression','argument_list',1,'p_argument_list','analizadorSintactico.py',50),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','analizadorSintactico.py',51),
  ('input_statement -> LOCAL_VAR ASSIGN GETS','input_statement',3,'p_input_statement','analizadorSintactico.py',56),
  ('input_statement -> LOCAL_VAR ASSIGN GETS DOT CHOMP','input_statement',5,'p_input_statement','analizadorSintactico.py',57),
  ('data_structure -> array_definition','data_structure',1,'p_data_structure','analizadorSintactico.py',62),
  ('array_definition -> LOCAL_VAR ASSIGN L_ULTRA_PAREN element_list R_ULTRA_PAREN','array_definition',5,'p_array_definition','analizadorSintactico.py',67),
  ('element_list -> expression','element_list',1,'p_element_list','analizadorSintactico.py',72),
  ('element_list -> element_list COMMA expression','element_list',3,'p_element_list','analizadorSintactico.py',73),
  ('control_structure -> if_statement','control_structure',1,'p_control_structure','analizadorSintactico.py',78),
  ('control_structure -> until_statement','control_structure',1,'p_control_structure','analizadorSintactico.py',79),
  ('control_structure -> unless_statement','control_structure',1,'p_control_structure','analizadorSintactico.py',80),
  ('if_statement -> IF condition statement_list END','if_statement',4,'p_if_statement','analizadorSintactico.py',85),
  ('if_statement -> IF condition statement_list ELSE statement_list END','if_statement',6,'p_if_statement','analizadorSintactico.py',86),
  ('unless_statement -> UNLESS condition statement_list END','unless_statement',4,'p_unless_statement','analizadorSintactico.py',90),
  ('unless_statement -> UNLESS condition statement_list ELSE statement_list END','unless_statement',6,'p_unless_statement','analizadorSintactico.py',91),
  ('until_statement -> UNTIL condition statement_list END','until_statement',4,'p_until_statement','analizadorSintactico.py',96),
  ('condition -> expression comparison_operator expression','condition',3,'p_condition','analizadorSintactico.py',101),
  ('function_definition -> DEF LOCAL_VAR L_PAREN parameter_list R_PAREN statement_list END','function_definition',7,'p_function_definition','analizadorSintactico.py',106),
  ('parameter_list -> LOCAL_VAR','parameter_list',1,'p_parameter_list','analizadorSintactico.py',111),
  ('parameter_list -> parameter_list COMMA LOCAL_VAR','parameter_list',3,'p_parameter_list','analizadorSintactico.py',112),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','analizadorSintactico.py',113),
  ('expression -> INTEGER','expression',1,'p_expression','analizadorSintactico.py',118),
  ('expression -> FLOAT','expression',1,'p_expression','analizadorSintactico.py',119),
  ('expression -> STRING','expression',1,'p_expression','analizadorSintactico.py',120),
  ('expression -> LOCAL_VAR','expression',1,'p_expression','analizadorSintactico.py',121),
  ('expression -> array_access','expression',1,'p_expression','analizadorSintactico.py',122),
  ('expression -> expression PLUS expression','expression',3,'p_expression','analizadorSintactico.py',123),
  ('expression -> expression MINUS expression','expression',3,'p_expression','analizadorSintactico.py',124),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','analizadorSintactico.py',125),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','analizadorSintactico.py',126),
  ('expression -> expression MODULE expression','expression',3,'p_expression','analizadorSintactico.py',127),
  ('expression -> expression comparison_operator expression','expression',3,'p_expression','analizadorSintactico.py',128),
  ('array_access -> LOCAL_VAR L_ULTRA_PAREN expression R_ULTRA_PAREN','array_access',4,'p_array_access','analizadorSintactico.py',133),
  ('comparison_operator -> EQUALS','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',138),
  ('comparison_operator -> DIFFERENT','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',139),
  ('comparison_operator -> LESS','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',140),
  ('comparison_operator -> LESS_EQUAL','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',141),
  ('comparison_operator -> GREATER','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',142),
  ('comparison_operator -> GREATER_EQUAL','comparison_operator',1,'p_comparison_operator','analizadorSintactico.py',143),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',148),
]
